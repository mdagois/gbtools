!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	inputFile	/Include an entry for the base file name of every input file/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	C:/src/meyers_manx/third_party/gbtools/gconv/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/030eca1/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
AreaCallback	./gfx/import/image.cpp	/^typedef std::function<bool(DivisionStatusList* out_division_status_list, const ImageArea&, uint3/;"	t	namespace:gfx	file:
CAPS	./gfx/export/capabilities.h	/^#define CAPS /;"	d
Capabilities	./gfx/export/capabilities.h	/^struct Capabilities$/;"	s	namespace:gfx
CheckEntry	./gfx/data/tileset.cpp	/^	struct CheckEntry$/;"	s	function:gfx::Tileset::removeDoubles	file:
ColorBGR555	./gfx/export/color.h	/^typedef uint16_t ColorBGR555;$/;"	t	namespace:gfx	typeref:typename:uint16_t
ColorRGBA	./gfx/data/color.h	/^struct ColorRGBA$/;"	s	namespace:gfx
Division	./gfx/import/division.h	/^struct Division$/;"	s	namespace:gfx
DivisionInfo	./gfx/import/division.h	/^struct DivisionInfo : std::vector<DivisionStatusList>$/;"	s	namespace:gfx
DivisionStatus	./gfx/import/division.h	/^enum DivisionStatus : uint8_t$/;"	g	namespace:gfx	typeref:typename:uint8_t
DivisionStatusList	./gfx/import/division.h	/^struct DivisionStatusList : public std::vector<DivisionStatus>$/;"	s	namespace:gfx
ERROR_MANAGEMENT_ERROR	./cli/commandline.cpp	/^#define ERROR_MANAGEMENT_ERROR /;"	d	file:
Error	./cli/commandline.h	/^enum class Error : uint32_t$/;"	g	namespace:cli	typeref:typename:uint32_t
FAST_BITS	./gfx/third_party/stb_image.h	/^#define FAST_BITS /;"	d
Format	./gfx/export/capabilities.h	/^enum Format : uint32_t$/;"	g	namespace:gfx	typeref:typename:uint32_t
GFX_LOG	./gfx/utils/log.h	/^#define GFX_LOG(/;"	d
GFX_LOG_DEBUG	./gfx/utils/log.h	/^#define GFX_LOG_DEBUG(/;"	d
GFX_LOG_ERROR	./gfx/utils/log.h	/^#define GFX_LOG_ERROR(/;"	d
GFX_LOG_INFO	./gfx/utils/log.h	/^#define GFX_LOG_INFO(/;"	d
GFX_LOG_WARN	./gfx/utils/log.h	/^#define GFX_LOG_WARN(/;"	d
Hardware	./gfx/export/enums.h	/^enum Hardware : uint32_t$/;"	g	namespace:gfx	typeref:typename:uint32_t
INCLUDE_STB_IMAGE_WRITE_H	./gfx/third_party/stb_image_write.h	/^#define INCLUDE_STB_IMAGE_WRITE_H$/;"	d
Image	./gfx/import/image.cpp	/^Image::Image()$/;"	f	class:gfx::Image
Image	./gfx/import/image.h	/^class Image$/;"	c	namespace:gfx
ImageArea	./gfx/import/image.cpp	/^ImageArea::ImageArea($/;"	f	class:gfx::ImageArea
ImageArea	./gfx/import/image.cpp	/^class ImageArea$/;"	c	namespace:gfx	file:
ImageTile	./gfx/import/image.cpp	/^ImageTile::ImageTile()$/;"	f	class:gfx::ImageTile
ImageTile	./gfx/import/image.h	/^class ImageTile$/;"	c	namespace:gfx
LogLevel	./gfx/utils/log.h	/^enum LogLevel : uint32_t$/;"	g	namespace:gfx	typeref:typename:uint32_t
Mapping	./cli/commandline.h	/^struct Mapping$/;"	s	namespace:cli
OffsetList	./gfx/import/division.h	/^typedef std::vector<uint32_t> OffsetList;$/;"	t	namespace:gfx	typeref:typename:std::vector<uint32_t>
Option	./cli/commandline.h	/^struct Option$/;"	s	namespace:cli
OptionCustom	./cli/commandline.cpp	/^Option OptionCustom(const char* name, const char* short_name, const char* description, bool requ/;"	f	namespace:cli	typeref:typename:Option
OptionFlag	./cli/commandline.cpp	/^Option OptionFlag(const char* name, const char* short_name, const char* description, uint32_t co/;"	f	namespace:cli	typeref:typename:Option
OptionInteger	./cli/commandline.cpp	/^Option OptionInteger(const char* name, const char* short_name, const char* description, bool req/;"	f	namespace:cli	typeref:typename:Option
OptionString	./cli/commandline.cpp	/^Option OptionString(const char* name, const char* short_name, const char* description, bool requ/;"	f	namespace:cli	typeref:typename:Option
OptionStringToInteger	./cli/commandline.cpp	/^Option OptionStringToInteger(const char* name, const char* short_name, const char* description, /;"	f	namespace:cli	typeref:typename:Option
OptionType	./cli/commandline.h	/^enum class OptionType : uint16_t$/;"	g	namespace:cli	typeref:typename:uint16_t
Options	./options.h	/^struct Options$/;"	s
Palette	./gfx/data/palette.cpp	/^Palette::Palette(bool insert_transparent_color)$/;"	f	class:gfx::Palette
Palette	./gfx/data/palette.h	/^class Palette$/;"	c	namespace:gfx
PaletteSet	./gfx/data/palette.cpp	/^PaletteSet::PaletteSet()$/;"	f	class:gfx::PaletteSet
PaletteSet	./gfx/data/palette.h	/^class PaletteSet$/;"	c	namespace:gfx
PaletteSetData	./gfx/export/palette.cpp	/^PaletteSetData::PaletteSetData()$/;"	f	class:gfx::PaletteSetData
PaletteSetData	./gfx/export/palette.h	/^class PaletteSetData$/;"	c	namespace:gfx
ParameterType	./cli/commandline.h	/^enum class ParameterType : uint16_t$/;"	g	namespace:cli	typeref:typename:uint16_t
Parser	./cli/commandline.cpp	/^Parser::Parser(const char** argv, int32_t argc, const Option* options, uint32_t option_count, co/;"	f	class:cli::Parser
Parser	./cli/commandline.h	/^class Parser$/;"	c	namespace:cli
RETURN_ERROR	./cli/commandline.cpp	/^#define RETURN_ERROR(/;"	d	file:
Rectangle	./gfx/import/image.h	/^struct Rectangle$/;"	s	namespace:gfx
STBIDEF	./gfx/third_party/stb_image.h	/^#define STBIDEF /;"	d
STBIWDEF	./gfx/third_party/stb_image_write.h	/^#define STBIWDEF /;"	d
STBIW_ASSERT	./gfx/third_party/stb_image_write.h	/^#define STBIW_ASSERT(/;"	d
STBIW_EXTERN	./gfx/third_party/stb_image_write.h	/^#define STBIW_EXTERN /;"	d
STBIW_FREE	./gfx/third_party/stb_image_write.h	/^#define STBIW_FREE(/;"	d
STBIW_MALLOC	./gfx/third_party/stb_image_write.h	/^#define STBIW_MALLOC(/;"	d
STBIW_MEMMOVE	./gfx/third_party/stb_image_write.h	/^#define STBIW_MEMMOVE(/;"	d
STBIW_REALLOC	./gfx/third_party/stb_image_write.h	/^#define STBIW_REALLOC(/;"	d
STBIW_REALLOC_SIZED	./gfx/third_party/stb_image_write.h	/^#define STBIW_REALLOC_SIZED(/;"	d
STBIW_UCHAR	./gfx/third_party/stb_image_write.h	/^#define STBIW_UCHAR(/;"	d
STBI_ASSERT	./gfx/third_party/stb_image.h	/^#define STBI_ASSERT(/;"	d
STBI_EXTERN	./gfx/third_party/stb_image.h	/^#define STBI_EXTERN /;"	d
STBI_FREE	./gfx/third_party/stb_image.h	/^#define STBI_FREE(/;"	d
STBI_HAS_LROTL	./gfx/third_party/stb_image.h	/^#define STBI_HAS_LROTL$/;"	d
STBI_INCLUDE_STB_IMAGE_H	./gfx/third_party/stb_image.h	/^#define STBI_INCLUDE_STB_IMAGE_H$/;"	d
STBI_MALLOC	./gfx/third_party/stb_image.h	/^#define STBI_MALLOC(/;"	d
STBI_MAX_DIMENSIONS	./gfx/third_party/stb_image.h	/^#define STBI_MAX_DIMENSIONS /;"	d
STBI_NOTUSED	./gfx/third_party/stb_image.h	/^#define STBI_NOTUSED(/;"	d
STBI_NO_BMP	./gfx/third_party/stb_image.h	/^   #define STBI_NO_BMP$/;"	d
STBI_NO_GIF	./gfx/third_party/stb_image.h	/^   #define STBI_NO_GIF$/;"	d
STBI_NO_HDR	./gfx/third_party/stb_image.h	/^   #define STBI_NO_HDR$/;"	d
STBI_NO_JPEG	./gfx/third_party/stb_image.h	/^   #define STBI_NO_JPEG$/;"	d
STBI_NO_PIC	./gfx/third_party/stb_image.h	/^   #define STBI_NO_PIC$/;"	d
STBI_NO_PNG	./gfx/third_party/stb_image.h	/^   #define STBI_NO_PNG$/;"	d
STBI_NO_PNM	./gfx/third_party/stb_image.h	/^   #define STBI_NO_PNM$/;"	d
STBI_NO_PSD	./gfx/third_party/stb_image.h	/^   #define STBI_NO_PSD$/;"	d
STBI_NO_SIMD	./gfx/third_party/stb_image.h	/^#define STBI_NO_SIMD$/;"	d
STBI_NO_TGA	./gfx/third_party/stb_image.h	/^   #define STBI_NO_TGA$/;"	d
STBI_NO_ZLIB	./gfx/third_party/stb_image.h	/^#define STBI_NO_ZLIB$/;"	d
STBI_ORDER_BGR	./gfx/third_party/stb_image.h	/^   STBI_ORDER_BGR$/;"	e	enum:__anonbc04e6d00403
STBI_ORDER_RGB	./gfx/third_party/stb_image.h	/^   STBI_ORDER_RGB,$/;"	e	enum:__anonbc04e6d00403
STBI_REALLOC	./gfx/third_party/stb_image.h	/^#define STBI_REALLOC(/;"	d
STBI_REALLOC_SIZED	./gfx/third_party/stb_image.h	/^#define STBI_REALLOC_SIZED(/;"	d
STBI_SIMD_ALIGN	./gfx/third_party/stb_image.h	/^#define STBI_SIMD_ALIGN(/;"	d
STBI_SSE2	./gfx/third_party/stb_image.h	/^#define STBI_SSE2$/;"	d
STBI_THREAD_LOCAL	./gfx/third_party/stb_image.h	/^        #define STBI_THREAD_LOCAL /;"	d
STBI_THREAD_LOCAL	./gfx/third_party/stb_image.h	/^      #define STBI_THREAD_LOCAL /;"	d
STBI_VERSION	./gfx/third_party/stb_image.h	/^#define STBI_VERSION /;"	d
STBI__BYTECAST	./gfx/third_party/stb_image.h	/^#define STBI__BYTECAST(/;"	d
STBI__CASE	./gfx/third_party/stb_image.h	/^      #define STBI__CASE(/;"	d
STBI__COMBO	./gfx/third_party/stb_image.h	/^      #define STBI__COMBO(/;"	d
STBI__F_avg	./gfx/third_party/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anonbc04e6d00f03
STBI__F_avg_first	./gfx/third_party/stb_image.h	/^   STBI__F_avg_first$/;"	e	enum:__anonbc04e6d00f03
STBI__F_none	./gfx/third_party/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anonbc04e6d00f03
STBI__F_paeth	./gfx/third_party/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anonbc04e6d00f03
STBI__F_sub	./gfx/third_party/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anonbc04e6d00f03
STBI__F_up	./gfx/third_party/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anonbc04e6d00f03
STBI__HDR_BUFLEN	./gfx/third_party/stb_image.h	/^#define STBI__HDR_BUFLEN /;"	d
STBI__IDCT_1D	./gfx/third_party/stb_image.h	/^#define STBI__IDCT_1D(/;"	d
STBI__MARKER_none	./gfx/third_party/stb_image.h	/^#define STBI__MARKER_none /;"	d
STBI__PNG_TYPE	./gfx/third_party/stb_image.h	/^#define STBI__PNG_TYPE(/;"	d
STBI__RESTART	./gfx/third_party/stb_image.h	/^#define STBI__RESTART(/;"	d
STBI__SCAN_header	./gfx/third_party/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anonbc04e6d00603
STBI__SCAN_load	./gfx/third_party/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anonbc04e6d00603
STBI__SCAN_type	./gfx/third_party/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anonbc04e6d00603
STBI__X64_TARGET	./gfx/third_party/stb_image.h	/^#define STBI__X64_TARGET$/;"	d
STBI__X86_TARGET	./gfx/third_party/stb_image.h	/^#define STBI__X86_TARGET$/;"	d
STBI__ZFAST_BITS	./gfx/third_party/stb_image.h	/^#define STBI__ZFAST_BITS /;"	d
STBI__ZFAST_MASK	./gfx/third_party/stb_image.h	/^#define STBI__ZFAST_MASK /;"	d
STBI__ZNSYMS	./gfx/third_party/stb_image.h	/^#define STBI__ZNSYMS /;"	d
STBI_default	./gfx/third_party/stb_image.h	/^   STBI_default = 0, \/\/ only used for desired_channels$/;"	e	enum:__anonbc04e6d00103
STBI_grey	./gfx/third_party/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anonbc04e6d00103
STBI_grey_alpha	./gfx/third_party/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anonbc04e6d00103
STBI_rgb	./gfx/third_party/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anonbc04e6d00103
STBI_rgb_alpha	./gfx/third_party/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anonbc04e6d00103
STB_IMAGE_IMPLEMENTATION	./gfx/third_party/stb_image.cpp	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	./gfx/third_party/stb_image_write.cpp	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
Tile	./gfx/data/tileset.cpp	/^Tile::Tile()$/;"	f	class:gfx::Tile
Tile	./gfx/data/tileset.h	/^class Tile$/;"	c	namespace:gfx
TileFlip	./gfx/data/tileset.cpp	/^TileFlip::TileFlip()$/;"	f	class:gfx::TileFlip
TileFlip	./gfx/data/tileset.h	/^struct TileFlip$/;"	s	namespace:gfx
TileFlipType	./gfx/data/tileset.h	/^enum TileFlipType : uint32_t$/;"	g	namespace:gfx	typeref:typename:uint32_t
TileMetadata	./gfx/gfx.cpp	/^	struct TileMetadata$/;"	s	function:gfx::extractTileset	file:
TileRemoval	./gfx/export/enums.h	/^enum TileRemoval$/;"	g	namespace:gfx
Tilemap	./gfx/data/tilemap.cpp	/^Tilemap::Tilemap()$/;"	f	class:gfx::Tilemap
Tilemap	./gfx/data/tilemap.h	/^class Tilemap$/;"	c	namespace:gfx
TilemapData	./gfx/export/tilemap.cpp	/^TilemapData::TilemapData()$/;"	f	class:gfx::TilemapData
TilemapData	./gfx/export/tilemap.h	/^class TilemapData$/;"	c	namespace:gfx
TilemapEntry	./gfx/data/tilemap.h	/^struct TilemapEntry$/;"	s	namespace:gfx
TilemapEntry	./options.h	/^	struct TilemapEntry$/;"	s	struct:Options
Tileset	./gfx/data/tileset.cpp	/^Tileset::Tileset()$/;"	f	class:gfx::Tileset
Tileset	./gfx/data/tileset.h	/^class Tileset$/;"	c	namespace:gfx
TilesetData	./gfx/export/tileset.cpp	/^TilesetData::TilesetData()$/;"	f	class:gfx::TilesetData
TilesetData	./gfx/export/tileset.h	/^class TilesetData$/;"	c	namespace:gfx
YCbCr_to_RGB_kernel	./gfx/third_party/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc/;"	m	struct:__anonbc04e6d00808	typeref:typename:void (*)(stbi_uc * out,const stbi_uc * y,const stbi_uc * pcb,const stbi_uc * pcr,int count,int step)
_CRT_NONSTDC_NO_DEPRECATE	./gfx/third_party/stb_image_write.h	/^   #define _CRT_NONSTDC_NO_DEPRECATE$/;"	d
_CRT_SECURE_NO_WARNINGS	./gfx/third_party/stb_image_write.h	/^   #define _CRT_SECURE_NO_WARNINGS$/;"	d
__anon3bd2bc540103	./gfx/data/color.h	/^{$/;"	g	namespace:gfx
__anon4dce22f40102	./gfx/import/image.cpp	/^	{$/;"	f	function:gfx::Image::iterateTiles	file:
__anon5d2d33240108	./options.h	/^	{$/;"	s	struct:Options
__anon5d2d33240208	./options.h	/^	{$/;"	s	struct:Options
__anon5d2d33240308	./options.h	/^	{$/;"	s	struct:Options
__anon5d2d33240408	./options.h	/^	{$/;"	s	struct:Options
__anon5d4685bf0103	./options.cpp	/^	{$/;"	g	function:parseCliOptions	typeref:typename:uint32_t	file:
__anon64ff0dbc0103	./gfx/export/color.h	/^{$/;"	g	namespace:gfx	typeref:typename:ColorBGR555
__anon7b731aef0102	./gfx/data/color.cpp	/^		{$/;"	f	function:gfx::sortColorsRGBA	file:
__anon9708898f0103	./gfx/data/tileset.h	/^{$/;"	g	namespace:gfx	typeref:typename:uint32_t
__anona3abd846010a	./cli/commandline.h	/^	{$/;"	u	struct:cli::Option
__anona3abd8460208	./cli/commandline.h	/^		{$/;"	s	union:cli::Option::__anona3abd846010a
__anona3abd8460308	./cli/commandline.h	/^		{$/;"	s	union:cli::Option::__anona3abd846010a
__anona3abd8460408	./cli/commandline.h	/^		{$/;"	s	union:cli::Option::__anona3abd846010a
__anona3abd8460508	./cli/commandline.h	/^		{$/;"	s	union:cli::Option::__anona3abd846010a
__anonb471f37f0102	./gfx/data/palette.cpp	/^			{$/;"	f	function:gfx::PaletteSet::optimize	file:
__anonb471f37f0202	./gfx/data/palette.cpp	/^			{$/;"	f	function:gfx::PaletteSet::optimize	file:
__anonbc04e6d00103	./gfx/third_party/stb_image.h	/^{$/;"	g
__anonbc04e6d00208	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00308	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00403	./gfx/third_party/stb_image.h	/^{$/;"	g
__anonbc04e6d00508	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00603	./gfx/third_party/stb_image.h	/^{$/;"	g
__anonbc04e6d00708	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00808	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00908	./gfx/third_party/stb_image.h	/^   {$/;"	s	struct:__anonbc04e6d00808
__anonbc04e6d00a08	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00b08	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00c08	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00d08	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00e08	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d00f03	./gfx/third_party/stb_image.h	/^enum {$/;"	g
__anonbc04e6d01008	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d01108	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d01208	./gfx/third_party/stb_image.h	/^{$/;"	s
__anonbc04e6d01308	./gfx/third_party/stb_image.h	/^{$/;"	s
__anond9c785ba0108	./gfx/third_party/stb_image_write.h	/^{$/;"	s
__anondade08ec0102	./gfx/gfx.cpp	/^			{$/;"	f	function:gfx::extractTileset	file:
__anondade08ec0202	./gfx/gfx.cpp	/^		{$/;"	f	function:gfx::extractTileset	file:
__anondade08ec0302	./gfx/gfx.cpp	/^	{$/;"	f	function:gfx::extractTileset	file:
__anondade08ec0402	./gfx/gfx.cpp	/^		{$/;"	f	function:gfx::extractTileset	file:
__anondade08ec0502	./gfx/gfx.cpp	/^		{$/;"	f	function:gfx::extractTilemap	file:
__anondbbac8a70108	./gfx/export/capabilities.h	/^	{$/;"	s	struct:gfx::Capabilities
__anondbbac8a70208	./gfx/export/capabilities.h	/^	{$/;"	s	struct:gfx::Capabilities
__anondbbac8a70308	./gfx/export/capabilities.h	/^	{$/;"	s	struct:gfx::Capabilities
__anondbbac8a70408	./gfx/export/capabilities.h	/^	{$/;"	s	struct:gfx::Capabilities
a	./gfx/data/color.h	/^	uint8_t a;$/;"	m	struct:gfx::ColorRGBA	typeref:typename:uint8_t
add	./gfx/data/palette.cpp	/^uint32_t PaletteSet::add(const Palette& palette)$/;"	f	class:gfx::PaletteSet	typeref:typename:uint32_t
add	./gfx/data/palette.cpp	/^void Palette::add(ColorRGBA color)$/;"	f	class:gfx::Palette	typeref:typename:void
add	./gfx/data/tilemap.cpp	/^void Tilemap::add($/;"	f	class:gfx::Tilemap	typeref:typename:void
add	./gfx/data/tileset.cpp	/^void Tileset::add(const Tile& tile)$/;"	f	class:gfx::Tileset	typeref:typename:void
addBasicTileSize	./gfx/gfx.cpp	/^static bool addBasicTileSize(std::vector<Division>& divisions)$/;"	f	namespace:gfx	typeref:typename:bool	file:
add_binary_headers	./options.h	/^		bool add_binary_headers = false;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:bool
all_a	./gfx/third_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:unsigned int
app14_color_transform	./gfx/third_party/stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
areCapabilitiesInitialized	./gfx/export/capabilities.cpp	/^bool areCapabilitiesInitialized()$/;"	f	namespace:gfx	typeref:typename:bool
b	./gfx/data/color.h	/^	uint8_t b;$/;"	m	struct:gfx::ColorRGBA	typeref:typename:uint8_t
background	./gfx/third_party/stb_image.h	/^   stbi_uc *background;          \/\/ The current "background" as far as a gif is concerned$/;"	m	struct:__anonbc04e6d01308	typeref:typename:stbi_uc *
bank	./gfx/data/tilemap.h	/^	uint8_t bank;$/;"	m	struct:gfx::TilemapEntry	typeref:typename:uint8_t
bank_max_count	./gfx/export/capabilities.h	/^		uint32_t bank_max_count;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70208	typeref:typename:uint32_t
base_index	./gfx/export/capabilities.h	/^		uint32_t base_index;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70108	typeref:typename:uint32_t
basic_tile_height	./gfx/export/capabilities.h	/^		uint32_t basic_tile_height;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70208	typeref:typename:uint32_t
basic_tile_width	./gfx/export/capabilities.h	/^		uint32_t basic_tile_width;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70208	typeref:typename:uint32_t
bgindex	./gfx/third_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
bits_per_channel	./gfx/third_party/stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anonbc04e6d00508	typeref:typename:int
blitTile	./gfx/gfx.cpp	/^static void blitTile(ColorRGBA* out_pixels, uint32_t pitch, const TileFlip& flip, const Palette&/;"	f	namespace:gfx	typeref:typename:void	file:
bpp	./gfx/third_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:int
buf_used	./gfx/third_party/stb_image_write.h	/^   int buf_used;$/;"	m	struct:__anond9c785ba0108	typeref:typename:int
buffer	./gfx/third_party/stb_image_write.h	/^   unsigned char buffer[64];$/;"	m	struct:__anond9c785ba0108	typeref:typename:unsigned char[64]
buffer_start	./gfx/third_party/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anonbc04e6d00308	typeref:typename:stbi_uc[128]
buflen	./gfx/third_party/stb_image.h	/^   int buflen;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:int
callback_already_read	./gfx/third_party/stb_image.h	/^   int callback_already_read;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:int
capabilities.cpp	./gfx/export/capabilities.cpp	1;"	F	epoch:1758245999
capabilities.h	./gfx/export/capabilities.h	1;"	F	epoch:1758245999
channel	./gfx/third_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonbc04e6d01108	typeref:typename:stbi_uc
channel_order	./gfx/third_party/stb_image.h	/^   int channel_order;$/;"	m	struct:__anonbc04e6d00508	typeref:typename:int
clear	./gfx/data/palette.cpp	/^void Palette::clear()$/;"	f	class:gfx::Palette	typeref:typename:void
cli	./cli/commandline.cpp	/^namespace cli {$/;"	n	file:
cli	./cli/commandline.h	/^namespace cli {$/;"	n
code	./cli/commandline.h	/^	uint32_t code;$/;"	m	struct:cli::Option	typeref:typename:uint32_t
code	./gfx/third_party/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anonbc04e6d00708	typeref:typename:stbi__uint16[256]
code_bits	./gfx/third_party/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
code_buffer	./gfx/third_party/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anonbc04e6d00808	typeref:typename:stbi__uint32
code_buffer	./gfx/third_party/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:stbi__uint32
codes	./gfx/third_party/stb_image.h	/^   stbi__gif_lzw codes[8192];$/;"	m	struct:__anonbc04e6d01308	typeref:typename:stbi__gif_lzw[8192]
coeff	./gfx/third_party/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:short *
coeff_h	./gfx/third_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
coeff_w	./gfx/third_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
color.cpp	./gfx/data/color.cpp	1;"	F	epoch:1758245999
color.cpp	./gfx/export/color.cpp	1;"	F	epoch:1758245999
color.h	./gfx/data/color.h	1;"	F	epoch:1758245999
color.h	./gfx/export/color.h	1;"	F	epoch:1758245999
color_index_format	./gfx/export/capabilities.h	/^		Format color_index_format;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70208	typeref:typename:Format
color_indices	./gfx/data/tileset.h	/^	std::vector<uint8_t> color_indices;$/;"	m	struct:gfx::TileFlip	typeref:typename:std::vector<uint8_t>
color_max_count	./gfx/export/capabilities.h	/^		uint32_t color_max_count;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70108	typeref:typename:uint32_t
color_table	./gfx/third_party/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:stbi_uc *
commandline.cpp	./cli/commandline.cpp	1;"	F	epoch:1758245999
commandline.h	./cli/commandline.h	1;"	F	epoch:1758245999
compatible_palettes	./gfx/gfx.cpp	/^		std::set<uint32_t> compatible_palettes;$/;"	m	struct:gfx::extractTileset::TileMetadata	typeref:typename:std::set<uint32_t>	file:
computeDivisionInfoOffsets	./gfx/import/division.cpp	/^bool computeDivisionInfoOffsets(DivisionInfo& inout_division_info)$/;"	f	namespace:gfx	typeref:typename:bool
contains	./gfx/data/palette.cpp	/^bool Palette::contains(const Palette& sub_palette) const$/;"	f	class:gfx::Palette	typeref:typename:bool
context	./gfx/third_party/stb_image_write.h	/^   void *context;$/;"	m	struct:__anond9c785ba0108	typeref:typename:void *
convertColor	./gfx/export/color.cpp	/^ColorBGR555 convertColor(ColorRGBA rgba)$/;"	f	namespace:gfx	typeref:typename:ColorBGR555
copyRow	./gfx/data/tileset.cpp	/^static void copyRow(uint8_t* out, const uint8_t* in, uint32_t row_length)$/;"	f	namespace:gfx	typeref:typename:void	file:
cur_x	./gfx/third_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
cur_y	./gfx/third_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
data	./gfx/third_party/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:stbi_uc *
data.h	./gfx/data/data.h	1;"	F	epoch:1758245999
dc_pred	./gfx/third_party/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
dct_bfly32o	./gfx/third_party/stb_image.h	/^   #define dct_bfly32o(/;"	d
dct_bfly32o	./gfx/third_party/stb_image.h	/^#define dct_bfly32o(/;"	d
dct_const	./gfx/third_party/stb_image.h	/^   #define dct_const(/;"	d
dct_interleave16	./gfx/third_party/stb_image.h	/^   #define dct_interleave16(/;"	d
dct_interleave8	./gfx/third_party/stb_image.h	/^   #define dct_interleave8(/;"	d
dct_long_mac	./gfx/third_party/stb_image.h	/^#define dct_long_mac(/;"	d
dct_long_mul	./gfx/third_party/stb_image.h	/^#define dct_long_mul(/;"	d
dct_pass	./gfx/third_party/stb_image.h	/^   #define dct_pass(/;"	d
dct_pass	./gfx/third_party/stb_image.h	/^#define dct_pass(/;"	d
dct_rot	./gfx/third_party/stb_image.h	/^   #define dct_rot(/;"	d
dct_trn16	./gfx/third_party/stb_image.h	/^#define dct_trn16(/;"	d
dct_trn32	./gfx/third_party/stb_image.h	/^#define dct_trn32(/;"	d
dct_trn64	./gfx/third_party/stb_image.h	/^#define dct_trn64(/;"	d
dct_trn8_16	./gfx/third_party/stb_image.h	/^#define dct_trn8_16(/;"	d
dct_trn8_32	./gfx/third_party/stb_image.h	/^#define dct_trn8_32(/;"	d
dct_trn8_8	./gfx/third_party/stb_image.h	/^#define dct_trn8_8(/;"	d
dct_wadd	./gfx/third_party/stb_image.h	/^   #define dct_wadd(/;"	d
dct_wadd	./gfx/third_party/stb_image.h	/^#define dct_wadd(/;"	d
dct_widen	./gfx/third_party/stb_image.h	/^   #define dct_widen(/;"	d
dct_widen	./gfx/third_party/stb_image.h	/^#define dct_widen(/;"	d
dct_wsub	./gfx/third_party/stb_image.h	/^   #define dct_wsub(/;"	d
dct_wsub	./gfx/third_party/stb_image.h	/^#define dct_wsub(/;"	d
debug	./options.h	/^	debug;$/;"	m	struct:Options	typeref:struct:Options::__anon5d2d33240408
delay	./gfx/third_party/stb_image.h	/^   int delay;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
delta	./gfx/third_party/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anonbc04e6d00708	typeref:typename:int[17]
depth	./gfx/third_party/stb_image.h	/^   int depth;$/;"	m	struct:__anonbc04e6d00e08	typeref:typename:int
dequant	./gfx/third_party/stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anonbc04e6d00808	typeref:typename:stbi__uint16[4][64]
desc	./cli/commandline.h	/^	const char* desc;$/;"	m	struct:cli::Mapping	typeref:typename:const char *
description	./cli/commandline.h	/^	const char* description;$/;"	m	struct:cli::Option	typeref:typename:const char *
directory	./options.h	/^		const char* directory = nullptr;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:const char *
division	./gfx/import/division.h	/^	Division division;$/;"	m	struct:gfx::DivisionStatusList	typeref:typename:Division
division.cpp	./gfx/import/division.cpp	1;"	F	epoch:1758245999
division.h	./gfx/import/division.h	1;"	F	epoch:1758245999
divisions	./options.h	/^		std::vector<gfx::Division> divisions;$/;"	m	struct:Options::__anon5d2d33240108	typeref:typename:std::vector<gfx::Division>
eflags	./gfx/third_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
enabled	./gfx/export/capabilities.h	/^		bool enabled;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70308	typeref:typename:bool
enabled	./gfx/export/capabilities.h	/^		bool enabled;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70408	typeref:typename:bool
entries	./options.h	/^		std::vector<TilemapEntry> entries;$/;"	m	struct:Options::__anon5d2d33240208	typeref:typename:std::vector<TilemapEntry>
enums.h	./gfx/export/enums.h	1;"	F	epoch:1758245999
eob_run	./gfx/third_party/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
eof	./gfx/third_party/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end o/;"	m	struct:__anonbc04e6d00208	typeref:typename:int (*)(void * user)
expanded	./gfx/third_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonbc04e6d00e08	typeref:typename:stbi_uc *
export.h	./gfx/export/export.h	1;"	F	epoch:1758245999
exportData	./gconv.cpp	/^static bool exportData($/;"	f	typeref:typename:bool	file:
exportInfo	./gconv.cpp	/^static bool exportInfo($/;"	f	typeref:typename:bool	file:
exportPaletteSet	./gfx/gfx.cpp	/^bool exportPaletteSet($/;"	f	namespace:gfx	typeref:typename:bool
exportTilemap	./gfx/gfx.cpp	/^bool exportTilemap($/;"	f	namespace:gfx	typeref:typename:bool
exportTileset	./gfx/gfx.cpp	/^bool exportTileset($/;"	f	namespace:gfx	typeref:typename:bool
extra_read	./gfx/third_party/stb_image.h	/^   int extra_read;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:int
extractTilePalette	./gfx/gfx.cpp	/^static bool extractTilePalette(Palette& out_tile_palette, const ImageTile& image_tile)$/;"	f	namespace:gfx	typeref:typename:bool	file:
extractTilemap	./gfx/gfx.cpp	/^bool extractTilemap($/;"	f	namespace:gfx	typeref:typename:bool
extractTileset	./gfx/gfx.cpp	/^bool extractTileset($/;"	f	namespace:gfx	typeref:typename:bool
fast	./gfx/third_party/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anonbc04e6d00b08	typeref:typename:stbi__uint16[]
fast	./gfx/third_party/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anonbc04e6d00708	typeref:typename:stbi_uc[]
fast_ac	./gfx/third_party/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anonbc04e6d00808	typeref:typename:stbi__int16[4][]
filename	./options.h	/^		std::string filename;$/;"	m	struct:Options::TilemapEntry	typeref:typename:std::string
fill	./gfx/data/palette.cpp	/^void Palette::fill(ColorRGBA color, uint32_t max_color_count)$/;"	f	class:gfx::Palette	typeref:typename:void
fillDivisionStatusList	./gfx/import/image.cpp	/^static void fillDivisionStatusList($/;"	f	namespace:gfx	typeref:typename:void	file:
fillOptionBase	./cli/commandline.cpp	/^static void fillOptionBase(Option& out_option, const char* name, const char* short_name, const c/;"	f	namespace:cli	typeref:typename:void	file:
findColorIndex	./gfx/data/palette.cpp	/^bool Palette::findColorIndex(uint8_t& out_color_index, ColorRGBA color) const$/;"	f	class:gfx::Palette	typeref:typename:bool
findCompatiblePaletteIndex	./gfx/data/palette.cpp	/^bool PaletteSet::findCompatiblePaletteIndex(uint32_t& out_palette_index, const Palette& palette)/;"	f	class:gfx::PaletteSet	typeref:typename:bool
findLongOption	./cli/commandline.cpp	/^const Option* Parser::findLongOption(const char* name, uint32_t& out_index) const$/;"	f	class:cli::Parser	typeref:typename:const Option *
findShortOption	./cli/commandline.cpp	/^const Option* Parser::findShortOption(const char* name, uint32_t& out_index) const$/;"	f	class:cli::Parser	typeref:typename:const Option *
findTileFlipInTileset	./gfx/gfx.cpp	/^static bool findTileFlipInTileset($/;"	f	namespace:gfx	typeref:typename:bool	file:
findTileIndex	./gfx/data/tileset.cpp	/^bool Tileset::findTileIndex($/;"	f	class:gfx::Tileset	typeref:typename:bool
first	./gfx/third_party/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anonbc04e6d01208	typeref:typename:stbi_uc
first_row_filter	./gfx/third_party/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v	typeref:typename:stbi_uc[5]
firstcode	./gfx/third_party/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anonbc04e6d00b08	typeref:typename:stbi__uint16[16]
firstsymbol	./gfx/third_party/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anonbc04e6d00b08	typeref:typename:stbi__uint16[16]
flag	./cli/commandline.h	/^		} flag;$/;"	m	union:cli::Option::__anona3abd846010a	typeref:struct:cli::Option::__anona3abd846010a::__anona3abd8460208
flags	./gfx/third_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
flip	./gfx/data/tileset.cpp	/^		TileFlip flip;$/;"	m	struct:gfx::Tileset::removeDoubles::CheckEntry	typeref:typename:TileFlip	file:
flipRow	./gfx/data/tileset.cpp	/^static void flipRow(uint8_t* out, const uint8_t* in, uint32_t row_length)$/;"	f	namespace:gfx	typeref:typename:void	file:
flip_horizontal	./gfx/data/tilemap.h	/^	bool flip_horizontal;$/;"	m	struct:gfx::TilemapEntry	typeref:typename:bool
flip_vertical	./gfx/data/tilemap.h	/^	bool flip_vertical;$/;"	m	struct:gfx::TilemapEntry	typeref:typename:bool
func	./gfx/third_party/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anond9c785ba0108	typeref:typename:stbi_write_func *
g	./gfx/data/color.h	/^	uint8_t g;$/;"	m	struct:gfx::ColorRGBA	typeref:typename:uint8_t
gconv.cpp	./gconv.cpp	1;"	F	epoch:1758245999
generateFlips	./gfx/data/tileset.cpp	/^static void generateFlips(TileFlip* inout_tile_flips)$/;"	f	namespace:gfx	typeref:typename:void	file:
generateTile	./gfx/gfx.cpp	/^static bool generateTile(Tile& out_tile, const ImageTile& image_tile, const Palette& palette)$/;"	f	namespace:gfx	typeref:typename:bool	file:
generateTileFlip	./gfx/gfx.cpp	/^static bool generateTileFlip($/;"	f	namespace:gfx	typeref:typename:bool	file:
generate_palette_png	./options.h	/^		bool generate_palette_png = false;$/;"	m	struct:Options::__anon5d2d33240408	typeref:typename:bool
generate_tileset_png	./options.h	/^		bool generate_tileset_png = false;$/;"	m	struct:Options::__anon5d2d33240408	typeref:typename:bool
getAverageLuminance	./gfx/data/palette.cpp	/^double Palette::getAverageLuminance() const$/;"	f	class:gfx::Palette	typeref:typename:double
getBasicTileWidth	./gfx/gfx.cpp	/^uint32_t getBasicTileWidth()$/;"	f	namespace:gfx	typeref:typename:uint32_t
getCapabilities	./gfx/export/capabilities.cpp	/^const Capabilities& getCapabilities()$/;"	f	namespace:gfx	typeref:typename:const Capabilities &
getData	./gfx/export/palette.cpp	/^const uint8_t* PaletteSetData::getData() const$/;"	f	class:gfx::PaletteSetData	typeref:typename:const uint8_t *
getData	./gfx/export/tileset.cpp	/^const uint8_t* TilesetData::getData() const$/;"	f	class:gfx::TilesetData	typeref:typename:const uint8_t *
getDataSize	./gfx/export/palette.cpp	/^uint32_t PaletteSetData::getDataSize() const$/;"	f	class:gfx::PaletteSetData	typeref:typename:uint32_t
getDataSize	./gfx/export/tileset.cpp	/^uint32_t TilesetData::getDataSize() const$/;"	f	class:gfx::TilesetData	typeref:typename:uint32_t
getDivisionOffset	./gfx/import/division.cpp	/^bool getDivisionOffset($/;"	f	namespace:gfx	typeref:typename:bool
getFilename	./gfx/import/image.cpp	/^const char* Image::getFilename() const$/;"	f	class:gfx::Image	typeref:typename:const char *
getHeight	./gfx/import/image.cpp	/^uint32_t Image::getHeight() const$/;"	f	class:gfx::Image	typeref:typename:uint32_t
getHeight	./gfx/import/image.cpp	/^uint32_t ImageArea::getHeight() const$/;"	f	class:gfx::ImageArea	typeref:typename:uint32_t
getHeight	./gfx/import/image.cpp	/^uint32_t ImageTile::getHeight() const$/;"	f	class:gfx::ImageTile	typeref:typename:uint32_t
getIndexData	./gfx/export/tilemap.cpp	/^const uint8_t* TilemapData::getIndexData() const$/;"	f	class:gfx::TilemapData	typeref:typename:const uint8_t *
getIndexDataSize	./gfx/export/tilemap.cpp	/^uint32_t TilemapData::getIndexDataSize() const$/;"	f	class:gfx::TilemapData	typeref:typename:uint32_t
getLastErrorMessage	./cli/commandline.cpp	/^const char* Parser::getLastErrorMessage()$/;"	f	class:cli::Parser	typeref:typename:const char *
getLetterFromStatus	./gfx/import/division.cpp	/^char getLetterFromStatus(DivisionStatus status)$/;"	f	namespace:gfx	typeref:typename:char
getLuminance	./gfx/data/color.cpp	/^double getLuminance(const ColorRGBA color)$/;"	f	namespace:gfx	typeref:typename:double
getNextOption	./cli/commandline.cpp	/^bool Parser::getNextOption(uint32_t& out_code, const char*& out_parameter, Error& out_error)$/;"	f	class:cli::Parser	typeref:typename:bool
getOffsetX	./gfx/import/image.cpp	/^uint32_t ImageArea::getOffsetX() const$/;"	f	class:gfx::ImageArea	typeref:typename:uint32_t
getOffsetY	./gfx/import/image.cpp	/^uint32_t ImageArea::getOffsetY() const$/;"	f	class:gfx::ImageArea	typeref:typename:uint32_t
getOutputFilename	./gconv.cpp	/^static const std::string getOutputFilename($/;"	f	typeref:typename:const std::string	file:
getPaletteCount	./gfx/export/palette.cpp	/^uint32_t PaletteSetData::getPaletteCount() const$/;"	f	class:gfx::PaletteSetData	typeref:typename:uint32_t
getPaletteIndex	./gfx/data/tileset.cpp	/^uint32_t Tile::getPaletteIndex() const$/;"	f	class:gfx::Tile	typeref:typename:uint32_t
getParameterData	./gfx/export/tilemap.cpp	/^const uint8_t* TilemapData::getParameterData() const$/;"	f	class:gfx::TilemapData	typeref:typename:const uint8_t *
getParameterDataSize	./gfx/export/tilemap.cpp	/^uint32_t TilemapData::getParameterDataSize() const$/;"	f	class:gfx::TilemapData	typeref:typename:uint32_t
getPixels	./gfx/import/image.cpp	/^const ColorRGBA* Image::getPixels() const$/;"	f	class:gfx::Image	typeref:typename:const ColorRGBA *
getRemainingArgumentCount	./cli/commandline.cpp	/^int32_t Parser::getRemainingArgumentCount() const$/;"	f	class:cli::Parser	typeref:typename:int32_t
getRemainingArguments	./cli/commandline.cpp	/^const char** Parser::getRemainingArguments() const$/;"	f	class:cli::Parser	typeref:typename:const char **
getStatusFromLetter	./gfx/import/division.cpp	/^DivisionStatus getStatusFromLetter(char letter)$/;"	f	namespace:gfx	typeref:typename:DivisionStatus
getTileCount	./gfx/export/tileset.cpp	/^uint32_t TilesetData::getTileCount() const$/;"	f	class:gfx::TilesetData	typeref:typename:uint32_t
getTileFlip	./gfx/data/tileset.cpp	/^const TileFlip& Tile::getTileFlip(TileFlipType type) const$/;"	f	class:gfx::Tile	typeref:typename:const TileFlip &
getWidth	./gfx/import/image.cpp	/^uint32_t Image::getWidth() const$/;"	f	class:gfx::Image	typeref:typename:uint32_t
getWidth	./gfx/import/image.cpp	/^uint32_t ImageArea::getWidth() const$/;"	f	class:gfx::ImageArea	typeref:typename:uint32_t
getWidth	./gfx/import/image.cpp	/^uint32_t ImageTile::getWidth() const$/;"	f	class:gfx::ImageTile	typeref:typename:uint32_t
gfx	./gfx/data/color.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/data/color.h	/^namespace gfx {$/;"	n
gfx	./gfx/data/palette.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/data/palette.h	/^namespace gfx {$/;"	n
gfx	./gfx/data/tilemap.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/data/tilemap.h	/^namespace gfx {$/;"	n
gfx	./gfx/data/tileset.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/data/tileset.h	/^namespace gfx {$/;"	n
gfx	./gfx/export/capabilities.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/export/capabilities.h	/^namespace gfx {$/;"	n
gfx	./gfx/export/color.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/export/color.h	/^namespace gfx {$/;"	n
gfx	./gfx/export/enums.h	/^namespace gfx {$/;"	n
gfx	./gfx/export/palette.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/export/palette.h	/^namespace gfx {$/;"	n
gfx	./gfx/export/tilemap.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/export/tilemap.h	/^namespace gfx {$/;"	n
gfx	./gfx/export/tileset.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/export/tileset.h	/^namespace gfx {$/;"	n
gfx	./gfx/gfx.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/gfx.h	/^namespace gfx {$/;"	n
gfx	./gfx/import/division.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/import/division.h	/^namespace gfx {$/;"	n
gfx	./gfx/import/image.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/import/image.h	/^namespace gfx {$/;"	n
gfx	./gfx/utils/log.cpp	/^namespace gfx {$/;"	n	file:
gfx	./gfx/utils/log.h	/^namespace gfx {$/;"	n
gfx.cpp	./gfx/gfx.cpp	1;"	F	epoch:1758245999
gfx.h	./gfx/gfx.h	1;"	F	epoch:1758245999
h	./gfx/import/image.h	/^	uint32_t h;$/;"	m	struct:gfx::Rectangle	typeref:typename:uint32_t
h	./gfx/third_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
h	./gfx/third_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
h2	./gfx/third_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
ha	./gfx/third_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
hardware	./options.h	/^	gfx::Hardware hardware = gfx::kHardwareCount;$/;"	m	struct:Options	typeref:typename:gfx::Hardware
hasColor	./gfx/data/palette.cpp	/^bool Palette::hasColor(ColorRGBA color) const$/;"	f	class:gfx::Palette	typeref:typename:bool
hd	./gfx/third_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
height	./gfx/data/tileset.h	/^	uint32_t height;$/;"	m	struct:gfx::TileFlip	typeref:typename:uint32_t
height	./gfx/import/division.h	/^	uint32_t height;$/;"	m	struct:gfx::Division	typeref:typename:uint32_t
help	./options.h	/^	bool help = false;$/;"	m	struct:Options	typeref:typename:bool
history	./gfx/third_party/stb_image.h	/^   stbi_uc *history;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:stbi_uc *
hit_zeof_once	./gfx/third_party/stb_image.h	/^   int hit_zeof_once;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:int
hs	./gfx/third_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anonbc04e6d00a08	typeref:typename:int
hsz	./gfx/third_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:int
huff_ac	./gfx/third_party/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anonbc04e6d00808	typeref:typename:stbi__huffman[4]
huff_dc	./gfx/third_party/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anonbc04e6d00808	typeref:typename:stbi__huffman[4]
id	./gfx/third_party/stb_image.h	/^      int id;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
idata	./gfx/third_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonbc04e6d00e08	typeref:typename:stbi_uc *
idct_block_kernel	./gfx/third_party/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anonbc04e6d00808	typeref:typename:void (*)(stbi_uc * out,int out_stride,short data[64])
image.cpp	./gfx/import/image.cpp	1;"	F	epoch:1758245999
image.h	./gfx/import/image.h	1;"	F	epoch:1759108437
image_filename	./options.h	/^		const char* image_filename = nullptr;$/;"	m	struct:Options::__anon5d2d33240108	typeref:typename:const char *
image_height	./gfx/import/division.h	/^	uint32_t image_height;$/;"	m	struct:gfx::DivisionInfo	typeref:typename:uint32_t
image_width	./gfx/import/division.h	/^	uint32_t image_width;$/;"	m	struct:gfx::DivisionInfo	typeref:typename:uint32_t
img_buffer	./gfx/third_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:stbi_uc *
img_buffer_end	./gfx/third_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:stbi_uc *
img_buffer_original	./gfx/third_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:stbi_uc *
img_buffer_original_end	./gfx/third_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:stbi_uc *
img_comp	./gfx/third_party/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anonbc04e6d00808	typeref:struct:__anonbc04e6d00808::__anonbc04e6d00908[4]
img_h_max	./gfx/third_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
img_mcu_h	./gfx/third_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
img_mcu_w	./gfx/third_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
img_mcu_x	./gfx/third_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
img_mcu_y	./gfx/third_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
img_n	./gfx/third_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:int
img_out_n	./gfx/third_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:int
img_v_max	./gfx/third_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
img_x	./gfx/third_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:stbi__uint32
img_y	./gfx/third_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:stbi__uint32
import.h	./gfx/import/import.h	1;"	F	epoch:1758245999
importData	./gconv.cpp	/^static bool importData($/;"	f	typeref:typename:bool	file:
importPaletteSet	./gconv.cpp	/^static bool importPaletteSet(gfx::PaletteSet& out_palette_set, const Options& options)$/;"	f	typeref:typename:bool	file:
initialize	./gfx/export/palette.cpp	/^bool PaletteSetData::initialize(const PaletteSet& palette_set)$/;"	f	class:gfx::PaletteSetData	typeref:typename:bool
initialize	./gfx/export/tilemap.cpp	/^bool TilemapData::initialize($/;"	f	class:gfx::TilemapData	typeref:typename:bool
initialize	./gfx/export/tileset.cpp	/^bool TilesetData::initialize(const Tileset& tileset)$/;"	f	class:gfx::TilesetData	typeref:typename:bool
initialize	./gfx/gfx.cpp	/^bool initialize(Hardware hardware)$/;"	f	namespace:gfx	typeref:typename:bool
initializeCapabilities	./gfx/export/capabilities.cpp	/^bool initializeCapabilities(Hardware hardware)$/;"	f	namespace:gfx	typeref:typename:bool
initializeFlips	./gfx/data/tileset.cpp	/^void Tile::initializeFlips(const TileFlip& none_tile_flip)$/;"	f	class:gfx::Tile	typeref:typename:void
initializeTileFlip	./gfx/data/tileset.cpp	/^void initializeTileFlip(TileFlip& out_tile_flip, uint32_t width, uint32_t height)$/;"	f	namespace:gfx	typeref:typename:void
insert_transparent_color	./gfx/export/capabilities.h	/^		bool insert_transparent_color;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70108	typeref:typename:bool
integer	./cli/commandline.h	/^		} integer;$/;"	m	union:cli::Option::__anona3abd846010a	typeref:struct:cli::Option::__anona3abd846010a::__anona3abd8460308
io	./gfx/third_party/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:stbi_io_callbacks
io_user_data	./gfx/third_party/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:void *
isDigit	./cli/commandline.cpp	/^bool Parser::isDigit(const char* str)$/;"	f	class:cli::Parser	typeref:typename:bool
isLocked	./gfx/data/palette.cpp	/^bool PaletteSet::isLocked() const$/;"	f	class:gfx::PaletteSet	typeref:typename:bool
isTileFlipValid	./gfx/data/tileset.cpp	/^static bool isTileFlipValid(const TileFlip& tile_flip)$/;"	f	namespace:gfx	typeref:typename:bool	file:
isTransparent	./gfx/import/image.cpp	/^bool ImageArea::isTransparent() const$/;"	f	class:gfx::ImageArea	typeref:typename:bool
iterateArea	./gfx/import/image.cpp	/^bool ImageArea::iterateArea(DivisionStatusList* out_division_status_list, uint32_t level, AreaCa/;"	f	class:gfx::ImageArea	typeref:typename:bool
iterateTiles	./gfx/import/image.cpp	/^bool Image::iterateTiles($/;"	f	class:gfx::Image	typeref:typename:bool
jfif	./gfx/third_party/stb_image.h	/^   int            jfif;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
kBGR555_Invalid	./gfx/export/color.h	/^	kBGR555_Invalid = 0x8000U,$/;"	e	enum:gfx::__anon64ff0dbc0103
kCannotFetchParameter	./cli/commandline.h	/^	kCannotFetchParameter,$/;"	e	enum:cli::Error
kCount	./cli/commandline.h	/^	kCount,$/;"	e	enum:cli::Error
kCustom	./cli/commandline.h	/^	kCustom,$/;"	e	enum:cli::OptionType
kDivisionStatus_Count	./gfx/import/division.h	/^	kDivisionStatus_Count,$/;"	e	enum:gfx::DivisionStatus
kDivisionStatus_Invalid	./gfx/import/division.h	/^	kDivisionStatus_Invalid,$/;"	e	enum:gfx::DivisionStatus
kDivisionStatus_Skipped	./gfx/import/division.h	/^	kDivisionStatus_Skipped,$/;"	e	enum:gfx::DivisionStatus
kDivisionStatus_Transparent	./gfx/import/division.h	/^	kDivisionStatus_Transparent,$/;"	e	enum:gfx::DivisionStatus
kDivisionStatus_Valid	./gfx/import/division.h	/^	kDivisionStatus_Valid,$/;"	e	enum:gfx::DivisionStatus
kFlag	./cli/commandline.h	/^	kFlag,$/;"	e	enum:cli::OptionType
kFormat_COL2222	./gfx/export/capabilities.h	/^	kFormat_COL2222,$/;"	e	enum:gfx::Format
kFormat_COL2222_COL2222_INTERLEAVED	./gfx/export/capabilities.h	/^	kFormat_COL2222_COL2222_INTERLEAVED,$/;"	e	enum:gfx::Format
kFormat_Count	./gfx/export/capabilities.h	/^	kFormat_Count,$/;"	e	enum:gfx::Format
kFormat_IDX8	./gfx/export/capabilities.h	/^	kFormat_IDX8,$/;"	e	enum:gfx::Format
kFormat_IDX8_X2_PAL3_X1_FLP2	./gfx/export/capabilities.h	/^	kFormat_IDX8_X2_PAL3_X1_FLP2,$/;"	e	enum:gfx::Format
kFormat_None	./gfx/export/capabilities.h	/^	kFormat_None,$/;"	e	enum:gfx::Format
kFormat_PAL2222	./gfx/export/capabilities.h	/^	kFormat_PAL2222,$/;"	e	enum:gfx::Format
kFormat_PAL3_BNK1_X1_FLP2_PRI1	./gfx/export/capabilities.h	/^	kFormat_PAL3_BNK1_X1_FLP2_PRI1,$/;"	e	enum:gfx::Format
kHardwareCount	./gfx/export/enums.h	/^	kHardwareCount,$/;"	e	enum:gfx::Hardware
kHardware_Cgb_Background	./gfx/export/enums.h	/^	kHardware_Cgb_Background,$/;"	e	enum:gfx::Hardware
kHardware_Cgb_Sprite_8x16	./gfx/export/enums.h	/^	kHardware_Cgb_Sprite_8x16,$/;"	e	enum:gfx::Hardware
kHardware_Cgb_Sprite_8x8	./gfx/export/enums.h	/^	kHardware_Cgb_Sprite_8x8,$/;"	e	enum:gfx::Hardware
kHardware_Dmg_Background	./gfx/export/enums.h	/^	kHardware_Dmg_Background,$/;"	e	enum:gfx::Hardware
kHardware_Dmg_Sprite	./gfx/export/enums.h	/^	kHardware_Dmg_Sprite,$/;"	e	enum:gfx::Hardware
kHardware_Printer	./gfx/export/enums.h	/^	kHardware_Printer,$/;"	e	enum:gfx::Hardware
kHardware_Sgb_Background	./gfx/export/enums.h	/^	kHardware_Sgb_Background,$/;"	e	enum:gfx::Hardware
kHardware_Sgb_Border	./gfx/export/enums.h	/^	kHardware_Sgb_Border,$/;"	e	enum:gfx::Hardware
kHighPriorityColorAlpha	./gfx/data/color.h	/^	kHighPriorityColorAlpha = 0,$/;"	e	enum:gfx::__anon3bd2bc540103
kIgnoreCode	./cli/commandline.h	/^static const uint32_t kIgnoreCode = 0xFFFFFFFEU;$/;"	v	namespace:cli	typeref:typename:const uint32_t
kInteger	./cli/commandline.h	/^	kInteger,$/;"	e	enum:cli::OptionType
kInternalError	./cli/commandline.h	/^	kInternalError,$/;"	e	enum:cli::Error
kInvalidIndex	./gfx/data/tileset.h	/^	kInvalidIndex = 0xFFFFFFFFU,$/;"	e	enum:gfx::__anon9708898f0103
kInvalidParameter	./cli/commandline.h	/^	kInvalidParameter,$/;"	e	enum:cli::Error
kLogLevel_All	./gfx/utils/log.h	/^	kLogLevel_All,$/;"	e	enum:gfx::LogLevel
kLogLevel_Debug	./gfx/utils/log.h	/^	kLogLevel_Debug,$/;"	e	enum:gfx::LogLevel
kLogLevel_Error	./gfx/utils/log.h	/^	kLogLevel_Error,$/;"	e	enum:gfx::LogLevel
kLogLevel_Info	./gfx/utils/log.h	/^	kLogLevel_Info,$/;"	e	enum:gfx::LogLevel
kLogLevel_None	./gfx/utils/log.h	/^	kLogLevel_None,$/;"	e	enum:gfx::LogLevel
kLogLevel_Warn	./gfx/utils/log.h	/^	kLogLevel_Warn,$/;"	e	enum:gfx::LogLevel
kNoArgumentSpecified	./cli/commandline.h	/^	kNoArgumentSpecified,$/;"	e	enum:cli::Error
kNoValidMapping	./cli/commandline.h	/^	kNoValidMapping,$/;"	e	enum:cli::Error
kNone	./cli/commandline.h	/^	kNone,$/;"	e	enum:cli::Error
kNone	./cli/commandline.h	/^	kNone,$/;"	e	enum:cli::ParameterType
kOption8800Addressing	./options.cpp	/^		kOption8800Addressing,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionAddHeaders	./options.cpp	/^		kOptionAddHeaders,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionGeneratePalette	./options.cpp	/^		kOptionGeneratePalette,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionGenerateTileset	./options.cpp	/^		kOptionGenerateTileset,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionHard	./options.cpp	/^		kOptionHard,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionHelp	./options.cpp	/^		kOptionHelp,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionInputPaletteSet	./options.cpp	/^		kOptionInputPaletteSet,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionOutputDirectory	./options.cpp	/^		kOptionOutputDirectory,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionPaletteIndexOffset	./options.cpp	/^		kOptionPaletteIndexOffset,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionSkipExportIndices	./options.cpp	/^		kOptionSkipExportIndices,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionSkipExportPalette	./options.cpp	/^		kOptionSkipExportPalette,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionSkipExportParameter	./options.cpp	/^		kOptionSkipExportParameter,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionSkipExportTilemapInfo	./options.cpp	/^		kOptionSkipExportTilemapInfo,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionSkipExportTileset	./options.cpp	/^		kOptionSkipExportTileset,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionSkipExportTilesetInfo	./options.cpp	/^		kOptionSkipExportTilesetInfo,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionTileIndexOffset	./options.cpp	/^		kOptionTileIndexOffset,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionTileRemoval	./options.cpp	/^		kOptionTileRemoval,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionTilemap	./options.cpp	/^		kOptionTilemap,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionTilemapDivisions	./options.cpp	/^		kOptionTilemapDivisions,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionTilemapRectangle	./options.cpp	/^		kOptionTilemapRectangle,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionTileset	./options.cpp	/^		kOptionTileset,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionTilesetDivisions	./options.cpp	/^		kOptionTilesetDivisions,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionTilesetRectangle	./options.cpp	/^		kOptionTilesetRectangle,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kOptionVerbose	./options.cpp	/^		kOptionVerbose,$/;"	e	enum:parseCliOptions::__anon5d4685bf0103	file:
kRGBA_Magenta	./gfx/data/color.h	/^static ColorRGBA kRGBA_Magenta = {0xFFU, 0x00U, 0xFFU, 0xFFU};$/;"	v	namespace:gfx	typeref:typename:ColorRGBA
kRGBA_White	./gfx/data/color.h	/^static ColorRGBA kRGBA_White = {0xFFU, 0xFFU, 0xFFU, 0xFFU};$/;"	v	namespace:gfx	typeref:typename:ColorRGBA
kRemainingCode	./cli/commandline.h	/^static const uint32_t kRemainingCode = 0xFFFFFFFFU;$/;"	v	namespace:cli	typeref:typename:const uint32_t
kRequired	./cli/commandline.h	/^	kRequired,$/;"	e	enum:cli::ParameterType
kRequiredOptionNotSpecified	./cli/commandline.h	/^	kRequiredOptionNotSpecified,$/;"	e	enum:cli::Error
kSingleHiphenDetected	./cli/commandline.h	/^	kSingleHiphenDetected,$/;"	e	enum:cli::Error
kString	./cli/commandline.h	/^	kString,$/;"	e	enum:cli::OptionType
kStringToInteger	./cli/commandline.h	/^	kStringToInteger,$/;"	e	enum:cli::OptionType
kTileFlipType_Both	./gfx/data/tileset.h	/^	kTileFlipType_Both,$/;"	e	enum:gfx::TileFlipType
kTileFlipType_Count	./gfx/data/tileset.h	/^	kTileFlipType_Count,$/;"	e	enum:gfx::TileFlipType
kTileFlipType_Horizontal	./gfx/data/tileset.h	/^	kTileFlipType_Horizontal,$/;"	e	enum:gfx::TileFlipType
kTileFlipType_None	./gfx/data/tileset.h	/^	kTileFlipType_None,$/;"	e	enum:gfx::TileFlipType
kTileFlipType_Vertical	./gfx/data/tileset.h	/^	kTileFlipType_Vertical,$/;"	e	enum:gfx::TileFlipType
kTileRemovalDoubles	./gfx/export/enums.h	/^	kTileRemovalDoubles,$/;"	e	enum:gfx::TileRemoval
kTileRemovalFlips	./gfx/export/enums.h	/^	kTileRemovalFlips,$/;"	e	enum:gfx::TileRemoval
kTileRemovalNone	./gfx/export/enums.h	/^	kTileRemovalNone,$/;"	e	enum:gfx::TileRemoval
kUnknownOption	./cli/commandline.h	/^	kUnknownOption,$/;"	e	enum:cli::Error
key	./cli/commandline.h	/^	const char* key;$/;"	m	struct:cli::Mapping	typeref:typename:const char *
last_list_offsets	./gfx/import/division.h	/^	OffsetList last_list_offsets;$/;"	m	struct:gfx::DivisionInfo	typeref:typename:OffsetList
length	./gfx/third_party/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anonbc04e6d00d08	typeref:typename:stbi__uint32
lflags	./gfx/third_party/stb_image.h	/^   int lflags;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
line0	./gfx/third_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anonbc04e6d00a08	typeref:typename:stbi_uc *
line1	./gfx/third_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anonbc04e6d00a08	typeref:typename:stbi_uc *
line_size	./gfx/third_party/stb_image.h	/^   int line_size;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
linebuf	./gfx/third_party/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:stbi_uc *
loadDivisionInfo	./gfx/gfx.cpp	/^bool loadDivisionInfo(DivisionInfo& out_division_info, const char* input_filename)$/;"	f	namespace:gfx	typeref:typename:bool
loadFile	./gfx/gfx.cpp	/^static bool loadFile(uint8_t*& out_data, uint32_t& out_data_size, const char* filename)$/;"	f	namespace:gfx	typeref:typename:bool	file:
loadRawPaletteData	./gfx/data/palette.cpp	/^void Palette::loadRawPaletteData(const ColorRGBA* colors, uint32_t color_count)$/;"	f	class:gfx::Palette	typeref:typename:void
loadRawPaletteData	./gfx/data/palette.cpp	/^void PaletteSet::loadRawPaletteData(const ColorRGBA* colors, uint32_t color_count)$/;"	f	class:gfx::PaletteSet	typeref:typename:void
load_jpeg_image	./gfx/third_party/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
lock	./gfx/data/palette.cpp	/^void PaletteSet::lock()$/;"	f	class:gfx::PaletteSet	typeref:typename:void
log	./gfx/utils/log.cpp	/^void log(LogLevel level, const char* message)$/;"	f	namespace:gfx	typeref:typename:void
log.cpp	./gfx/utils/log.cpp	1;"	F	epoch:1758245999
log.h	./gfx/utils/log.h	1;"	F	epoch:1758245999
lpal	./gfx/third_party/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anonbc04e6d01308	typeref:typename:stbi_uc[256][4]
m_argument_count	./cli/commandline.h	/^	const int32_t m_argument_count;$/;"	m	class:cli::Parser	typeref:typename:const int32_t
m_arguments	./cli/commandline.h	/^	const char** m_arguments;$/;"	m	class:cli::Parser	typeref:typename:const char **
m_colors	./gfx/data/palette.h	/^	std::vector<ColorRGBA> m_colors;$/;"	m	class:gfx::Palette	typeref:typename:std::vector<ColorRGBA>
m_data	./gfx/export/palette.h	/^	std::vector<ColorBGR555> m_data;$/;"	m	class:gfx::PaletteSetData	typeref:typename:std::vector<ColorBGR555>
m_data	./gfx/export/tileset.h	/^	std::vector<uint8_t> m_data;$/;"	m	class:gfx::TilesetData	typeref:typename:std::vector<uint8_t>
m_description	./cli/commandline.h	/^	const char* m_description;$/;"	m	class:cli::Parser	typeref:typename:const char *
m_done_parsing	./cli/commandline.h	/^	bool m_done_parsing;$/;"	m	class:cli::Parser	typeref:typename:bool
m_entries	./gfx/data/tilemap.h	/^	std::vector<TilemapEntry> m_entries;$/;"	m	class:gfx::Tilemap	typeref:typename:std::vector<TilemapEntry>
m_error_message	./cli/commandline.h	/^	char m_error_message[512];$/;"	m	class:cli::Parser	typeref:typename:char[512]
m_filename	./gfx/import/image.h	/^	std::string m_filename;$/;"	m	class:gfx::Image	typeref:typename:std::string
m_flips	./gfx/data/tileset.h	/^	TileFlip m_flips[kTileFlipType_Count];$/;"	m	class:gfx::Tile	typeref:typename:TileFlip[]
m_height	./gfx/import/image.cpp	/^	uint32_t m_height;$/;"	m	class:gfx::ImageArea	typeref:typename:uint32_t	file:
m_height	./gfx/import/image.h	/^	uint32_t m_height;$/;"	m	class:gfx::Image	typeref:typename:uint32_t
m_image_area	./gfx/import/image.h	/^	const ImageArea* m_image_area;$/;"	m	class:gfx::ImageTile	typeref:typename:const ImageArea *
m_indices	./gfx/export/tilemap.h	/^	std::vector<uint8_t> m_indices;$/;"	m	class:gfx::TilemapData	typeref:typename:std::vector<uint8_t>
m_isLocked	./gfx/data/palette.h	/^	bool m_isLocked;$/;"	m	class:gfx::PaletteSet	typeref:typename:bool
m_last_error	./cli/commandline.h	/^	Error m_last_error;$/;"	m	class:cli::Parser	typeref:typename:Error
m_next_argument_index	./cli/commandline.h	/^	int32_t m_next_argument_index;$/;"	m	class:cli::Parser	typeref:typename:int32_t
m_offset_x	./gfx/import/image.cpp	/^	uint32_t m_offset_x;$/;"	m	class:gfx::ImageArea	typeref:typename:uint32_t	file:
m_offset_y	./gfx/import/image.cpp	/^	uint32_t m_offset_y;$/;"	m	class:gfx::ImageArea	typeref:typename:uint32_t	file:
m_option_count	./cli/commandline.h	/^	const uint32_t m_option_count;$/;"	m	class:cli::Parser	typeref:typename:const uint32_t
m_option_name_max_len	./cli/commandline.h	/^	uint32_t m_option_name_max_len;$/;"	m	class:cli::Parser	typeref:typename:uint32_t
m_option_required_mask	./cli/commandline.h	/^	uint32_t m_option_required_mask;$/;"	m	class:cli::Parser	typeref:typename:uint32_t
m_option_short_name_max_len	./cli/commandline.h	/^	uint32_t m_option_short_name_max_len;$/;"	m	class:cli::Parser	typeref:typename:uint32_t
m_options	./cli/commandline.h	/^	const Option* m_options;$/;"	m	class:cli::Parser	typeref:typename:const Option *
m_palette_count	./gfx/export/palette.h	/^	uint32_t m_palette_count;$/;"	m	class:gfx::PaletteSetData	typeref:typename:uint32_t
m_palette_index	./gfx/data/tileset.h	/^	uint32_t m_palette_index;$/;"	m	class:gfx::Tile	typeref:typename:uint32_t
m_palettes	./gfx/data/palette.h	/^	std::vector<Palette> m_palettes;$/;"	m	class:gfx::PaletteSet	typeref:typename:std::vector<Palette>
m_parameters_16	./gfx/export/tilemap.h	/^	std::vector<uint16_t> m_parameters_16;$/;"	m	class:gfx::TilemapData	typeref:typename:std::vector<uint16_t>
m_parameters_8	./gfx/export/tilemap.h	/^	std::vector<uint8_t> m_parameters_8;$/;"	m	class:gfx::TilemapData	typeref:typename:std::vector<uint8_t>
m_pitch	./gfx/import/image.cpp	/^	uint32_t m_pitch;$/;"	m	class:gfx::ImageArea	typeref:typename:uint32_t	file:
m_pixels	./gfx/import/image.cpp	/^	const ColorRGBA* m_pixels;$/;"	m	class:gfx::ImageArea	typeref:typename:const ColorRGBA *	file:
m_pixels	./gfx/import/image.h	/^	ColorRGBA* m_pixels;$/;"	m	class:gfx::Image	typeref:typename:ColorRGBA *
m_tile_count	./gfx/export/tileset.h	/^	uint32_t m_tile_count;$/;"	m	class:gfx::TilesetData	typeref:typename:uint32_t
m_tiles	./gfx/data/tileset.h	/^	std::vector<Tile> m_tiles;$/;"	m	class:gfx::Tileset	typeref:typename:std::vector<Tile>
m_width	./gfx/import/image.cpp	/^	uint32_t m_width;$/;"	m	class:gfx::ImageArea	typeref:typename:uint32_t	file:
m_width	./gfx/import/image.h	/^	uint32_t m_width;$/;"	m	class:gfx::Image	typeref:typename:uint32_t
ma	./gfx/third_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:unsigned int
main	./gconv.cpp	/^int main(int argc, const char** argv)$/;"	f	typeref:typename:int
main	./readinfo.cpp	/^int main(int argc, const char** argv)$/;"	f	typeref:typename:int
makeFirstColor	./gfx/data/palette.cpp	/^void Palette::makeFirstColor(ColorRGBA color)$/;"	f	class:gfx::Palette	typeref:typename:void
mapping_count	./cli/commandline.h	/^			uint32_t mapping_count;$/;"	m	struct:cli::Option::__anona3abd846010a::__anona3abd8460508	typeref:typename:uint32_t
mappings	./cli/commandline.h	/^			const Mapping* mappings;$/;"	m	struct:cli::Option::__anona3abd846010a::__anona3abd8460508	typeref:typename:const Mapping *
marker	./gfx/third_party/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anonbc04e6d00808	typeref:typename:unsigned char
max_count	./gfx/export/capabilities.h	/^		uint32_t max_count;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70108	typeref:typename:uint32_t
max_x	./gfx/third_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
max_y	./gfx/third_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
maxcode	./gfx/third_party/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anonbc04e6d00b08	typeref:typename:int[17]
maxcode	./gfx/third_party/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anonbc04e6d00708	typeref:typename:unsigned int[18]
mb	./gfx/third_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:unsigned int
mergePalettes	./gfx/data/palette.cpp	/^static bool mergePalettes(Palette& out_palette, const Palette lhs, const Palette rhs, uint32_t c/;"	f	namespace:gfx	typeref:typename:bool	file:
mg	./gfx/third_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:unsigned int
mr	./gfx/third_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:unsigned int
name	./cli/commandline.h	/^	const char* name;$/;"	m	struct:cli::Option	typeref:typename:const char *
nomore	./gfx/third_party/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
num_bits	./gfx/third_party/stb_image.h	/^   int num_bits;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:int
num_channels	./gfx/third_party/stb_image.h	/^   int num_channels;$/;"	m	struct:__anonbc04e6d00508	typeref:typename:int
offset	./gfx/third_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anonbc04e6d01008	typeref:typename:int
operator !=	./gfx/data/color.cpp	/^bool operator!=(const ColorRGBA& lhs, const ColorRGBA& rhs)$/;"	f	namespace:gfx	typeref:typename:bool
operator <	./gfx/data/color.cpp	/^bool operator<(const ColorRGBA& lhs, const ColorRGBA& rhs)$/;"	f	namespace:gfx	typeref:typename:bool
operator <	./gfx/data/tileset.cpp	/^		bool operator<(const CheckEntry& other) const$/;"	f	struct:gfx::Tileset::removeDoubles::CheckEntry	typeref:typename:bool	file:
operator <	./gfx/data/tileset.cpp	/^bool operator<(const TileFlip& lhs, const TileFlip& rhs)$/;"	f	namespace:gfx	typeref:typename:bool
operator ==	./gfx/data/color.cpp	/^bool operator==(const ColorRGBA& lhs, const ColorRGBA& rhs)$/;"	f	namespace:gfx	typeref:typename:bool
operator ==	./gfx/data/palette.cpp	/^static bool operator==(const Palette& lhs, const Palette& rhs)$/;"	f	namespace:gfx	typeref:typename:bool	file:
operator ==	./gfx/data/tileset.cpp	/^bool operator==(const TileFlip& lhs, const TileFlip& rhs)$/;"	f	namespace:gfx	typeref:typename:bool
operator []	./gfx/data/palette.cpp	/^Palette& PaletteSet::operator[](int32_t index)$/;"	f	class:gfx::PaletteSet	typeref:typename:Palette &
operator []	./gfx/data/palette.cpp	/^const ColorRGBA Palette::operator[](int32_t index) const$/;"	f	class:gfx::Palette	typeref:typename:const ColorRGBA
operator []	./gfx/data/palette.cpp	/^const Palette& PaletteSet::operator[](int32_t index) const$/;"	f	class:gfx::PaletteSet	typeref:typename:const Palette &
operator []	./gfx/data/tilemap.cpp	/^const TilemapEntry& Tilemap::operator[](int32_t index) const$/;"	f	class:gfx::Tilemap	typeref:typename:const TilemapEntry &
operator []	./gfx/data/tileset.cpp	/^const Tile& Tileset::operator[](int32_t index) const$/;"	f	class:gfx::Tileset	typeref:typename:const Tile &
operator []	./gfx/import/image.cpp	/^const ColorRGBA ImageArea::operator[](int32_t index) const$/;"	f	class:gfx::ImageArea	typeref:typename:const ColorRGBA
operator []	./gfx/import/image.cpp	/^const ColorRGBA ImageTile::operator[](int32_t index) const$/;"	f	class:gfx::ImageTile	typeref:typename:const ColorRGBA
optimize	./gfx/data/palette.cpp	/^bool PaletteSet::optimize(uint32_t palette_color_max_count, bool share_first_color, bool fill_pa/;"	f	class:gfx::PaletteSet	typeref:typename:bool
option_type	./cli/commandline.h	/^	OptionType option_type;$/;"	m	struct:cli::Option	typeref:typename:OptionType
options.cpp	./options.cpp	1;"	F	epoch:1759108557
options.h	./options.h	1;"	F	epoch:1759108420
order	./gfx/third_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int[4]
out	./gfx/third_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonbc04e6d00e08	typeref:typename:stbi_uc *
out	./gfx/third_party/stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anonbc04e6d01308	typeref:typename:stbi_uc *
output	./options.h	/^	output;$/;"	m	struct:Options	typeref:struct:Options::__anon5d2d33240308
outputDebugData	./gconv.cpp	/^static bool outputDebugData($/;"	f	typeref:typename:bool	file:
pal	./gfx/third_party/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anonbc04e6d01308	typeref:typename:stbi_uc[256][4]
palette	./gfx/export/capabilities.h	/^	} palette;$/;"	m	struct:gfx::Capabilities	typeref:struct:gfx::Capabilities::__anondbbac8a70108
palette.cpp	./gfx/data/palette.cpp	1;"	F	epoch:1758245999
palette.cpp	./gfx/export/palette.cpp	1;"	F	epoch:1758245999
palette.h	./gfx/data/palette.h	1;"	F	epoch:1758245999
palette.h	./gfx/export/palette.h	1;"	F	epoch:1758245999
palette_index	./gfx/data/tilemap.h	/^	uint8_t palette_index;$/;"	m	struct:gfx::TilemapEntry	typeref:typename:uint8_t
palette_index	./gfx/data/tileset.cpp	/^		uint32_t palette_index;$/;"	m	struct:gfx::Tileset::removeDoubles::CheckEntry	typeref:typename:uint32_t	file:
palette_index_offset	./options.h	/^		int32_t palette_index_offset = 0;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:int32_t
palette_set_filename	./options.h	/^		const char* palette_set_filename = nullptr;$/;"	m	struct:Options::__anon5d2d33240108	typeref:typename:const char *
parameter_type	./cli/commandline.h	/^	ParameterType parameter_type;$/;"	m	struct:cli::Option	typeref:typename:ParameterType
parse	./gfx/third_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
parseCliOptions	./options.cpp	/^bool parseCliOptions(Options& out_options, bool& out_is_help, int argc, const char** argv)$/;"	f	typeref:typename:bool
parseDivisions	./options.cpp	/^static bool parseDivisions(std::vector<gfx::Division>& out_divisions, std::string sequence)$/;"	f	typeref:typename:bool	file:
prefix	./gfx/third_party/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anonbc04e6d01208	typeref:typename:stbi__int16
printDivisionInfo	./gfx/gfx.cpp	/^bool printDivisionInfo(const DivisionInfo& info)$/;"	f	namespace:gfx	typeref:typename:bool
printHelp	./cli/commandline.cpp	/^void Parser::printHelp() const$/;"	f	class:cli::Parser	typeref:typename:void
priority	./gfx/data/tilemap.h	/^	bool priority;$/;"	m	struct:gfx::TilemapEntry	typeref:typename:bool
progressive	./gfx/third_party/stb_image.h	/^   int            progressive;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
r	./gfx/data/color.h	/^	uint8_t r;$/;"	m	struct:gfx::ColorRGBA	typeref:typename:uint8_t
ratio	./gfx/third_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
raw_coeff	./gfx/third_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:void *
raw_data	./gfx/third_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:void *
read	./gfx/import/image.cpp	/^bool Image::read(const char* filename)$/;"	f	class:gfx::Image	typeref:typename:bool
read	./gfx/third_party/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  re/;"	m	struct:__anonbc04e6d00208	typeref:typename:int (*)(void * user,char * data,int size)
read_from_callbacks	./gfx/third_party/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anonbc04e6d00308	typeref:typename:int
readinfo.cpp	./readinfo.cpp	1;"	F	epoch:1758245999
rectangle	./options.h	/^		Rectangle rectangle;$/;"	m	struct:Options::__anon5d2d33240108	typeref:typename:Rectangle
rectangle	./options.h	/^		gfx::Rectangle rectangle:$/;"	m	struct:Options::TilemapEntry	typeref:typename:gfx::Rectangle
removeDoubles	./gfx/data/tileset.cpp	/^void Tileset::removeDoubles(bool compare_flips)$/;"	f	class:gfx::Tileset	typeref:typename:void
required	./cli/commandline.h	/^	bool required;$/;"	m	struct:cli::Option	typeref:typename:bool
resample	./gfx/third_party/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anonbc04e6d00a08	typeref:typename:resample_row_func
resample_row_1	./gfx/third_party/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	typeref:typename:stbi_uc *
resample_row_func	./gfx/third_party/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in0,stbi_uc * in1,int w,int hs)
resample_row_hv_2_kernel	./gfx/third_party/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	m	struct:__anonbc04e6d00808	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in_near,stbi_uc * in_far,int w,int hs)
restart_interval	./gfx/third_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
rgb	./gfx/third_party/stb_image.h	/^   int            rgb;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
s	./gfx/third_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:stbi__context *
s	./gfx/third_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anonbc04e6d00e08	typeref:typename:stbi__context *
s_capabilities	./gfx/export/capabilities.cpp	/^static Capabilities s_capabilities = {};$/;"	v	namespace:gfx	typeref:typename:Capabilities	file:
s_hardware	./gfx/export/capabilities.cpp	/^static Hardware s_hardware = kHardwareCount;$/;"	v	namespace:gfx	typeref:typename:Hardware	file:
s_letter	./gfx/import/division.cpp	/^static const char s_letter[] = { 'X', '|', '.', '@' };$/;"	v	namespace:gfx	typeref:typename:const char[]	file:
s_log_level	./gfx/utils/log.cpp	/^static uint32_t s_log_level = kLogLevel_Error;$/;"	v	namespace:gfx	typeref:typename:uint32_t	file:
scan_n	./gfx/third_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
setImageArea	./gfx/import/image.cpp	/^void ImageTile::setImageArea(const ImageArea* image_area)$/;"	f	class:gfx::ImageTile	typeref:typename:void
setLogLevel	./gfx/utils/log.cpp	/^void setLogLevel(LogLevel level)$/;"	f	namespace:gfx	typeref:typename:void
setPaletteIndex	./gfx/data/tileset.cpp	/^void Tile::setPaletteIndex(uint32_t palette_index)$/;"	f	class:gfx::Tile	typeref:typename:void
share_first_color	./gfx/export/capabilities.h	/^		bool share_first_color;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70108	typeref:typename:bool
short_name	./cli/commandline.h	/^	const char* short_name;$/;"	m	struct:cli::Option	typeref:typename:const char *
shortenExecutableName	./cli/commandline.cpp	/^static const char* shortenExecutableName(const char* name)$/;"	f	namespace:cli	typeref:typename:const char *	file:
size	./gfx/data/palette.cpp	/^uint32_t Palette::size() const$/;"	f	class:gfx::Palette	typeref:typename:uint32_t
size	./gfx/data/palette.cpp	/^uint32_t PaletteSet::size() const$/;"	f	class:gfx::PaletteSet	typeref:typename:uint32_t
size	./gfx/data/tilemap.cpp	/^uint32_t Tilemap::size() const$/;"	f	class:gfx::Tilemap	typeref:typename:uint32_t
size	./gfx/data/tileset.cpp	/^uint32_t Tileset::size() const$/;"	f	class:gfx::Tileset	typeref:typename:uint32_t
size	./gfx/third_party/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anonbc04e6d00708	typeref:typename:stbi_uc[257]
size	./gfx/third_party/stb_image.h	/^   stbi_uc  size[STBI__ZNSYMS];$/;"	m	struct:__anonbc04e6d00b08	typeref:typename:stbi_uc[]
size	./gfx/third_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonbc04e6d01108	typeref:typename:stbi_uc
skip	./gfx/third_party/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget/;"	m	struct:__anonbc04e6d00208	typeref:typename:void (*)(void * user,int n)
skip_export_indices	./options.h	/^		bool skip_export_indices = false;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:bool
skip_export_palette	./options.h	/^		bool skip_export_palette = false;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:bool
skip_export_parameters	./options.h	/^		bool skip_export_parameters = false;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:bool
skip_export_tilemap_info	./options.h	/^		bool skip_export_tilemap_info = false;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:bool
skip_export_tileset	./options.h	/^		bool skip_export_tileset = false;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:bool
skip_export_tileset_info	./options.h	/^		bool skip_export_tileset_info = false;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:bool
skip_transparent	./gfx/import/division.h	/^	bool skip_transparent;$/;"	m	struct:gfx::Division	typeref:typename:bool
sort	./gfx/data/palette.cpp	/^void Palette::sort()$/;"	f	class:gfx::Palette	typeref:typename:void
sortColorsRGBA	./gfx/data/color.cpp	/^void sortColorsRGBA(ColorRGBA* colors, uint32_t count)$/;"	f	namespace:gfx	typeref:typename:void
spec_end	./gfx/third_party/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
spec_start	./gfx/third_party/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
sprite	./gfx/export/capabilities.h	/^	} sprite;$/;"	m	struct:gfx::Capabilities	typeref:struct:gfx::Capabilities::__anondbbac8a70408
start_x	./gfx/third_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
start_y	./gfx/third_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
stb_image.cpp	./gfx/third_party/stb_image.cpp	1;"	F	epoch:1758245999
stb_image.h	./gfx/third_party/stb_image.h	1;"	F	epoch:1758245999
stb_image_write.cpp	./gfx/third_party/stb_image_write.cpp	1;"	F	epoch:1758245999
stb_image_write.h	./gfx/third_party/stb_image_write.h	1;"	F	epoch:1758245999
stb_image_write_test	./gfx/third_party/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:int[sizeof (stbiw_uint32)==4?1:-1]
stbi__DNL	./gfx/third_party/stb_image.h	/^#define stbi__DNL(/;"	d
stbi__EOI	./gfx/third_party/stb_image.h	/^#define stbi__EOI(/;"	d
stbi__SOF	./gfx/third_party/stb_image.h	/^#define stbi__SOF(/;"	d
stbi__SOF_progressive	./gfx/third_party/stb_image.h	/^#define stbi__SOF_progressive(/;"	d
stbi__SOI	./gfx/third_party/stb_image.h	/^#define stbi__SOI(/;"	d
stbi__SOS	./gfx/third_party/stb_image.h	/^#define stbi__SOS(/;"	d
stbi__YCbCr_to_RGB_row	./gfx/third_party/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stb/;"	f	typeref:typename:void
stbi__YCbCr_to_RGB_simd	./gfx/third_party/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc /;"	f	typeref:typename:void
stbi__addints_valid	./gfx/third_party/stb_image.h	/^static int stbi__addints_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__addsizes_valid	./gfx/third_party/stb_image.h	/^static int stbi__addsizes_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__at_eof	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f	typeref:typename:stbi_inline int
stbi__bit_reverse	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f	typeref:typename:stbi_inline int
stbi__bitcount	./gfx/third_party/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f	typeref:typename:int
stbi__bitreverse16	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f	typeref:typename:stbi_inline int
stbi__blinn_8x8	./gfx/third_party/stb_image.h	/^static stbi_uc stbi__blinn_8x8(stbi_uc x, stbi_uc y)$/;"	f	typeref:typename:stbi_uc
stbi__bmask	./gfx/third_party/stb_image.h	/^static const stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,1638/;"	v	typeref:typename:const stbi__uint32[17]
stbi__bmp_data	./gfx/third_party/stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anonbc04e6d01008
stbi__bmp_info	./gfx/third_party/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__bmp_load	./gfx/third_party/stb_image.h	/^static void *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__bmp_parse_header	./gfx/third_party/stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f	typeref:typename:void *
stbi__bmp_set_mask_defaults	./gfx/third_party/stb_image.h	/^static int stbi__bmp_set_mask_defaults(stbi__bmp_data *info, int compress)$/;"	f	typeref:typename:int
stbi__bmp_test	./gfx/third_party/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__bmp_test_raw	./gfx/third_party/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__build_fast_ac	./gfx/third_party/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f	typeref:typename:void
stbi__build_huffman	./gfx/third_party/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f	typeref:typename:int
stbi__check_png_header	./gfx/third_party/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f	typeref:typename:int
stbi__clamp	./gfx/third_party/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__cleanup_jpeg	./gfx/third_party/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__compute_huffman_codes	./gfx/third_party/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__compute_transparency	./gfx/third_party/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_transparency16	./gfx/third_party/stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_y	./gfx/third_party/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f	typeref:typename:stbi_uc
stbi__compute_y_16	./gfx/third_party/stb_image.h	/^static stbi__uint16 stbi__compute_y_16(int r, int g, int b)$/;"	f	typeref:typename:stbi__uint16
stbi__context	./gfx/third_party/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anonbc04e6d00308
stbi__convert_16_to_8	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__convert_16_to_8(stbi__uint16 *orig, int w, int h, int channels)$/;"	f	typeref:typename:stbi_uc *
stbi__convert_8_to_16	./gfx/third_party/stb_image.h	/^static stbi__uint16 *stbi__convert_8_to_16(stbi_uc *orig, int w, int h, int channels)$/;"	f	typeref:typename:stbi__uint16 *
stbi__convert_format	./gfx/third_party/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:unsigned char *
stbi__convert_format16	./gfx/third_party/stb_image.h	/^static stbi__uint16 *stbi__convert_format16(stbi__uint16 *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:stbi__uint16 *
stbi__copyval	./gfx/third_party/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f	typeref:typename:void
stbi__cpuid3	./gfx/third_party/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f	typeref:typename:int
stbi__create_png_alpha_expand8	./gfx/third_party/stb_image.h	/^static void stbi__create_png_alpha_expand8(stbi_uc *dest, stbi_uc *src, stbi__uint32 x, int img_/;"	f	typeref:typename:void
stbi__create_png_image	./gfx/third_party/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len/;"	f	typeref:typename:int
stbi__create_png_image_raw	./gfx/third_party/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_/;"	f	typeref:typename:int
stbi__de_iphone	./gfx/third_party/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f	typeref:typename:void
stbi__de_iphone_flag	./gfx/third_party/stb_image.h	/^#define stbi__de_iphone_flag  (stbi__de_iphone_flag_/;"	d
stbi__de_iphone_flag	./gfx/third_party/stb_image.h	/^#define stbi__de_iphone_flag  stbi__de_iphone_flag_/;"	d
stbi__de_iphone_flag_global	./gfx/third_party/stb_image.h	/^static int stbi__de_iphone_flag_global = 0;$/;"	v	typeref:typename:int
stbi__de_iphone_flag_local	./gfx/third_party/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__de_iphone_flag_set	./gfx/third_party/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__decode_jpeg_header	./gfx/third_party/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__decode_jpeg_image	./gfx/third_party/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f	typeref:typename:int
stbi__depth_scale_table	./gfx/third_party/stb_image.h	/^static const stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v	typeref:typename:const stbi_uc[9]
stbi__div16	./gfx/third_party/stb_image.h	/^#define stbi__div16(/;"	d
stbi__div4	./gfx/third_party/stb_image.h	/^#define stbi__div4(/;"	d
stbi__do_png	./gfx/third_party/stb_image.h	/^static void *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info /;"	f	typeref:typename:void *
stbi__do_zlib	./gfx/third_party/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	typeref:typename:int
stbi__end_write_file	./gfx/third_party/stb_image_write.h	/^static void stbi__end_write_file(stbi__write_context *s)$/;"	f	typeref:typename:void
stbi__err	./gfx/third_party/stb_image.h	/^   #define stbi__err(/;"	d
stbi__err	./gfx/third_party/stb_image.h	/^   #define stbi__err(x,y)  stbi__err(/;"	d
stbi__err	./gfx/third_party/stb_image.h	/^static int stbi__err(const char *str)$/;"	f	typeref:typename:int
stbi__errpf	./gfx/third_party/stb_image.h	/^#define stbi__errpf(/;"	d
stbi__errpuc	./gfx/third_party/stb_image.h	/^#define stbi__errpuc(/;"	d
stbi__expand_png_palette	./gfx/third_party/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f	typeref:typename:int
stbi__extend_receive	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__f2f	./gfx/third_party/stb_image.h	/^#define stbi__f2f(/;"	d
stbi__fill_bits	./gfx/third_party/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f	typeref:typename:void
stbi__flip_vertically_on_write	./gfx/third_party/stb_image_write.h	/^static int stbi__flip_vertically_on_write = 0;$/;"	v	typeref:typename:int
stbi__float2fixed	./gfx/third_party/stb_image.h	/^#define stbi__float2fixed(/;"	d
stbi__float2int	./gfx/third_party/stb_image.h	/^#define stbi__float2int(/;"	d
stbi__float_postprocess	./gfx/third_party/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:void
stbi__fopen	./gfx/third_party/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f	typeref:typename:FILE *
stbi__free_jpeg_components	./gfx/third_party/stb_image.h	/^static int stbi__free_jpeg_components(stbi__jpeg *z, int ncomp, int why)$/;"	f	typeref:typename:int
stbi__fsh	./gfx/third_party/stb_image.h	/^#define stbi__fsh(/;"	d
stbi__g_failure_reason	./gfx/third_party/stb_image.h	/^const char *stbi__g_failure_reason;$/;"	v	typeref:typename:STBI_THREAD_LOCAL const char *
stbi__get16be	./gfx/third_party/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get16le	./gfx/third_party/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get32be	./gfx/third_party/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get32le	./gfx/third_party/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get8	./gfx/third_party/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__get_chunk_header	./gfx/third_party/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f	typeref:typename:stbi__pngchunk
stbi__get_marker	./gfx/third_party/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_uc
stbi__getn	./gfx/third_party/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f	typeref:typename:int
stbi__gif	./gfx/third_party/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anonbc04e6d01308
stbi__gif_header	./gfx/third_party/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f	typeref:typename:int
stbi__gif_info	./gfx/third_party/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_info_raw	./gfx/third_party/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_load	./gfx/third_party/stb_image.h	/^static void *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__gif_load_next	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stb/;"	f	typeref:typename:stbi_uc *
stbi__gif_lzw	./gfx/third_party/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anonbc04e6d01208
stbi__gif_parse_colortable	./gfx/third_party/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, i/;"	f	typeref:typename:void
stbi__gif_test	./gfx/third_party/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__gif_test_raw	./gfx/third_party/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__grow_buffer_unsafe	./gfx/third_party/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__h2l_gamma_i	./gfx/third_party/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__h2l_scale_i	./gfx/third_party/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__hdr_convert	./gfx/third_party/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	typeref:typename:void
stbi__hdr_gettoken	./gfx/third_party/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f	typeref:typename:char *
stbi__hdr_info	./gfx/third_party/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__hdr_load	./gfx/third_party/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:float *
stbi__hdr_test	./gfx/third_party/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f	typeref:typename:int
stbi__hdr_test_core	./gfx/third_party/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s, const char *signature)$/;"	f	typeref:typename:int
stbi__hdr_to_ldr	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	typeref:typename:stbi_uc *
stbi__high_bit	./gfx/third_party/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f	typeref:typename:int
stbi__huffman	./gfx/third_party/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anonbc04e6d00708
stbi__idct_block	./gfx/third_party/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__idct_simd	./gfx/third_party/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__info_main	./gfx/third_party/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__int16	./gfx/third_party/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t	typeref:typename:signed short
stbi__int16	./gfx/third_party/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t	typeref:typename:int16_t
stbi__int32	./gfx/third_party/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t	typeref:typename:signed int
stbi__int32	./gfx/third_party/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t	typeref:typename:int32_t
stbi__is_16_main	./gfx/third_party/stb_image.h	/^static int stbi__is_16_main(stbi__context *s)$/;"	f	typeref:typename:int
stbi__jbias	./gfx/third_party/stb_image.h	/^static const int stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-819/;"	v	typeref:typename:const int[16]
stbi__jpeg	./gfx/third_party/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anonbc04e6d00808
stbi__jpeg_decode_block	./gfx/third_party/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huff/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_ac	./gfx/third_party/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, st/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_dc	./gfx/third_party/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, in/;"	f	typeref:typename:int
stbi__jpeg_dequantize	./gfx/third_party/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi__uint16 *dequant)$/;"	f	typeref:typename:void
stbi__jpeg_dezigzag	./gfx/third_party/stb_image.h	/^static const stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v	typeref:typename:const stbi_uc[]
stbi__jpeg_finish	./gfx/third_party/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f	typeref:typename:void
stbi__jpeg_get_bit	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_get_bits	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_huff_decode	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_info	./gfx/third_party/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_info_raw	./gfx/third_party/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_load	./gfx/third_party/stb_image.h	/^static void *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:void *
stbi__jpeg_reset	./gfx/third_party/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__jpeg_test	./gfx/third_party/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__l2h_gamma	./gfx/third_party/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__l2h_scale	./gfx/third_party/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__ldr_to_hdr	./gfx/third_party/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	typeref:typename:float *
stbi__load_and_postprocess_16bit	./gfx/third_party/stb_image.h	/^static stbi__uint16 *stbi__load_and_postprocess_16bit(stbi__context *s, int *x, int *y, int *com/;"	f	typeref:typename:stbi__uint16 *
stbi__load_and_postprocess_8bit	./gfx/third_party/stb_image.h	/^static unsigned char *stbi__load_and_postprocess_8bit(stbi__context *s, int *x, int *y, int *com/;"	f	typeref:typename:unsigned char *
stbi__load_gif_main	./gfx/third_party/stb_image.h	/^static void *stbi__load_gif_main(stbi__context *s, int **delays, int *x, int *y, int *z, int *co/;"	f	typeref:typename:void *
stbi__load_gif_main_outofmem	./gfx/third_party/stb_image.h	/^static void *stbi__load_gif_main_outofmem(stbi__gif *g, stbi_uc *out, int **delays)$/;"	f	typeref:typename:void *
stbi__load_main	./gfx/third_party/stb_image.h	/^static void *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:void *
stbi__loadf_main	./gfx/third_party/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi__mad2sizes_valid	./gfx/third_party/stb_image.h	/^static int stbi__mad2sizes_valid(int a, int b, int add)$/;"	f	typeref:typename:int
stbi__mad3sizes_valid	./gfx/third_party/stb_image.h	/^static int stbi__mad3sizes_valid(int a, int b, int c, int add)$/;"	f	typeref:typename:int
stbi__mad4sizes_valid	./gfx/third_party/stb_image.h	/^static int stbi__mad4sizes_valid(int a, int b, int c, int d, int add)$/;"	f	typeref:typename:int
stbi__malloc	./gfx/third_party/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f	typeref:typename:void *
stbi__malloc_mad2	./gfx/third_party/stb_image.h	/^static void *stbi__malloc_mad2(int a, int b, int add)$/;"	f	typeref:typename:void *
stbi__malloc_mad3	./gfx/third_party/stb_image.h	/^static void *stbi__malloc_mad3(int a, int b, int c, int add)$/;"	f	typeref:typename:void *
stbi__malloc_mad4	./gfx/third_party/stb_image.h	/^static void *stbi__malloc_mad4(int a, int b, int c, int d, int add)$/;"	f	typeref:typename:void *
stbi__mul2shorts_valid	./gfx/third_party/stb_image.h	/^static int stbi__mul2shorts_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__mul2sizes_valid	./gfx/third_party/stb_image.h	/^static int stbi__mul2sizes_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__out_gif_code	./gfx/third_party/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f	typeref:typename:void
stbi__paeth	./gfx/third_party/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f	typeref:typename:int
stbi__parse_entropy_coded_data	./gfx/third_party/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__parse_huffman_block	./gfx/third_party/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_png_file	./gfx/third_party/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f	typeref:typename:int
stbi__parse_uncompressed_block	./gfx/third_party/stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_zlib	./gfx/third_party/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f	typeref:typename:int
stbi__parse_zlib_header	./gfx/third_party/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__pic_info	./gfx/third_party/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pic_is4	./gfx/third_party/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f	typeref:typename:int
stbi__pic_load	./gfx/third_party/stb_image.h	/^static void *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__resul/;"	f	typeref:typename:void *
stbi__pic_load_core	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *re/;"	f	typeref:typename:stbi_uc *
stbi__pic_packet	./gfx/third_party/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anonbc04e6d01108
stbi__pic_test	./gfx/third_party/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pic_test_core	./gfx/third_party/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png	./gfx/third_party/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anonbc04e6d00e08
stbi__png_info	./gfx/third_party/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_info_raw	./gfx/third_party/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_is16	./gfx/third_party/stb_image.h	/^static int stbi__png_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png_load	./gfx/third_party/stb_image.h	/^static void *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__png_test	./gfx/third_party/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pngchunk	./gfx/third_party/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anonbc04e6d00d08
stbi__pnm_getinteger	./gfx/third_party/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f	typeref:typename:int
stbi__pnm_info	./gfx/third_party/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pnm_is16	./gfx/third_party/stb_image.h	/^static int stbi__pnm_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pnm_isdigit	./gfx/third_party/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f	typeref:typename:int
stbi__pnm_isspace	./gfx/third_party/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f	typeref:typename:int
stbi__pnm_load	./gfx/third_party/stb_image.h	/^static void *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__pnm_skip_whitespace	./gfx/third_party/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f	typeref:typename:void
stbi__pnm_test	./gfx/third_party/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__process_frame_header	./gfx/third_party/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__process_gif_raster	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f	typeref:typename:stbi_uc *
stbi__process_marker	./gfx/third_party/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f	typeref:typename:int
stbi__process_scan_header	./gfx/third_party/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__psd_decode_rle	./gfx/third_party/stb_image.h	/^static int stbi__psd_decode_rle(stbi__context *s, stbi_uc *p, int pixelCount)$/;"	f	typeref:typename:int
stbi__psd_info	./gfx/third_party/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__psd_is16	./gfx/third_party/stb_image.h	/^static int stbi__psd_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__psd_load	./gfx/third_party/stb_image.h	/^static void *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__psd_test	./gfx/third_party/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__readval	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f	typeref:typename:stbi_uc *
stbi__refill_buffer	./gfx/third_party/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f	typeref:typename:void
stbi__resample	./gfx/third_party/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anonbc04e6d00a08
stbi__resample_row_generic	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_h_2	./gfx/third_party/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2_simd	./gfx/third_party/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, in/;"	f	typeref:typename:stbi_uc *
stbi__resample_row_v_2	./gfx/third_party/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, i/;"	f	typeref:typename:stbi_uc *
stbi__result_info	./gfx/third_party/stb_image.h	/^} stbi__result_info;$/;"	t	typeref:struct:__anonbc04e6d00508
stbi__rewind	./gfx/third_party/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f	typeref:typename:void
stbi__setup_jpeg	./gfx/third_party/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__shiftsigned	./gfx/third_party/stb_image.h	/^static int stbi__shiftsigned(unsigned int v, int shift, int bits)$/;"	f	typeref:typename:int
stbi__skip	./gfx/third_party/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f	typeref:typename:void
stbi__skip_jpeg_junk_at_end	./gfx/third_party/stb_image.h	/^static stbi_uc stbi__skip_jpeg_junk_at_end(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_uc
stbi__sse2_available	./gfx/third_party/stb_image.h	/^static int stbi__sse2_available(void)$/;"	f	typeref:typename:int
stbi__start_callbacks	./gfx/third_party/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f	typeref:typename:void
stbi__start_file	./gfx/third_party/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f	typeref:typename:void
stbi__start_mem	./gfx/third_party/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f	typeref:typename:void
stbi__start_write_callbacks	./gfx/third_party/stb_image_write.h	/^static void stbi__start_write_callbacks(stbi__write_context *s, stbi_write_func *c, void *contex/;"	f	typeref:typename:void
stbi__start_write_file	./gfx/third_party/stb_image_write.h	/^static int stbi__start_write_file(stbi__write_context *s, const char *filename)$/;"	f	typeref:typename:int
stbi__stdio_callbacks	./gfx/third_party/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v	typeref:typename:stbi_io_callbacks
stbi__stdio_eof	./gfx/third_party/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f	typeref:typename:int
stbi__stdio_read	./gfx/third_party/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f	typeref:typename:int
stbi__stdio_skip	./gfx/third_party/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f	typeref:typename:void
stbi__stdio_write	./gfx/third_party/stb_image_write.h	/^static void stbi__stdio_write(void *context, void *data, int size)$/;"	f	typeref:typename:void
stbi__tga_get_comp	./gfx/third_party/stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f	typeref:typename:int
stbi__tga_info	./gfx/third_party/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__tga_load	./gfx/third_party/stb_image.h	/^static void *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__tga_read_rgb16	./gfx/third_party/stb_image.h	/^static void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f	typeref:typename:void
stbi__tga_test	./gfx/third_party/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__uint16	./gfx/third_party/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t	typeref:typename:uint16_t
stbi__uint16	./gfx/third_party/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t	typeref:typename:unsigned short
stbi__uint32	./gfx/third_party/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t	typeref:typename:uint32_t
stbi__uint32	./gfx/third_party/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t	typeref:typename:unsigned int
stbi__unpremultiply_on_load	./gfx/third_party/stb_image.h	/^#define stbi__unpremultiply_on_load  (stbi__unpremultiply_on_load_/;"	d
stbi__unpremultiply_on_load	./gfx/third_party/stb_image.h	/^#define stbi__unpremultiply_on_load  stbi__unpremultiply_on_load_/;"	d
stbi__unpremultiply_on_load_global	./gfx/third_party/stb_image.h	/^static int stbi__unpremultiply_on_load_global = 0;$/;"	v	typeref:typename:int
stbi__unpremultiply_on_load_local	./gfx/third_party/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__unpremultiply_on_load_set	./gfx/third_party/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__vertical_flip	./gfx/third_party/stb_image.h	/^static void stbi__vertical_flip(void *image, int w, int h, int bytes_per_pixel)$/;"	f	typeref:typename:void
stbi__vertical_flip_slices	./gfx/third_party/stb_image.h	/^static void stbi__vertical_flip_slices(void *image, int w, int h, int z, int bytes_per_pixel)$/;"	f	typeref:typename:void
stbi__vertically_flip_on_load	./gfx/third_party/stb_image.h	/^#define stbi__vertically_flip_on_load  (stbi__vertically_flip_on_load_/;"	d
stbi__vertically_flip_on_load	./gfx/third_party/stb_image.h	/^#define stbi__vertically_flip_on_load  stbi__vertically_flip_on_load_/;"	d
stbi__vertically_flip_on_load_global	./gfx/third_party/stb_image.h	/^static int stbi__vertically_flip_on_load_global = 0;$/;"	v	typeref:typename:int
stbi__vertically_flip_on_load_local	./gfx/third_party/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__vertically_flip_on_load_set	./gfx/third_party/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__write_context	./gfx/third_party/stb_image_write.h	/^} stbi__write_context;$/;"	t	typeref:struct:__anond9c785ba0108
stbi__zbuf	./gfx/third_party/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anonbc04e6d00c08
stbi__zbuild_huffman	./gfx/third_party/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, const stbi_uc *sizelist, int num)$/;"	f	typeref:typename:int
stbi__zdefault_distance	./gfx/third_party/stb_image.h	/^static const stbi_uc stbi__zdefault_distance[32] =$/;"	v	typeref:typename:const stbi_uc[32]
stbi__zdefault_length	./gfx/third_party/stb_image.h	/^static const stbi_uc stbi__zdefault_length[STBI__ZNSYMS] =$/;"	v	typeref:typename:const stbi_uc[]
stbi__zdist_base	./gfx/third_party/stb_image.h	/^static const int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v	typeref:typename:const int[32]
stbi__zdist_extra	./gfx/third_party/stb_image.h	/^static const int stbi__zdist_extra[32] =$/;"	v	typeref:typename:const int[32]
stbi__zeof	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__zeof(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zexpand	./gfx/third_party/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f	typeref:typename:int
stbi__zget8	./gfx/third_party/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__zhuffman	./gfx/third_party/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anonbc04e6d00b08
stbi__zhuffman_decode	./gfx/third_party/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zhuffman_decode_slowpath	./gfx/third_party/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:int
stbi__zlength_base	./gfx/third_party/stb_image.h	/^static const int stbi__zlength_base[31] = {$/;"	v	typeref:typename:const int[31]
stbi__zlength_extra	./gfx/third_party/stb_image.h	/^static const int stbi__zlength_extra[31]=$/;"	v	typeref:typename:const int[31]
stbi__zreceive	./gfx/third_party/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f	typeref:typename:stbi_inline unsigned int
stbi_convert_iphone_png_to_rgb	./gfx/third_party/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_convert_iphone_png_to_rgb_thread	./gfx/third_party/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb_thread(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_convert_wchar_to_utf8	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	typeref:typename:STBIDEF int
stbi_failure_reason	./gfx/third_party/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f	typeref:typename:STBIDEF const char *
stbi_flip_vertically_on_write	./gfx/third_party/stb_image_write.h	/^STBIWDEF void stbi_flip_vertically_on_write(int flag)$/;"	f	typeref:typename:STBIWDEF void
stbi_hdr_to_ldr_gamma	./gfx/third_party/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_hdr_to_ldr_scale	./gfx/third_party/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_image_free	./gfx/third_party/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f	typeref:typename:STBIDEF void
stbi_info	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_callbacks	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int/;"	f	typeref:typename:STBIDEF int
stbi_info_from_file	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_memory	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_inline	./gfx/third_party/stb_image.h	/^   #define stbi_inline /;"	d
stbi_inline	./gfx/third_party/stb_image.h	/^   #define stbi_inline$/;"	d
stbi_io_callbacks	./gfx/third_party/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anonbc04e6d00208
stbi_is_16_bit	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_is_16_bit(char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_callbacks	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_file	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_memory	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr	./gfx/third_party/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_callbacks	./gfx/third_party/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_file	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_is_hdr_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_memory	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_ldr_to_hdr_gamma	./gfx/third_party/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_ldr_to_hdr_scale	./gfx/third_party/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_load	./gfx/third_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_16	./gfx/third_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_16_from_callbacks	./gfx/third_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, /;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_16_from_memory	./gfx/third_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *c/;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_from_callbacks	./gfx/third_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file	./gfx/third_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file_16	./gfx/third_party/stb_image.h	/^STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi__uint16 *
stbi_load_from_memory	./gfx/third_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_gif_from_memory	./gfx/third_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_gif_from_memory(stbi_uc const *buffer, int len, int **delays, int *x,/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_loadf	./gfx/third_party/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_callbacks	./gfx/third_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int /;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_file	./gfx/third_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_memory	./gfx/third_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp,/;"	f	typeref:typename:STBIDEF float *
stbi_lrot	./gfx/third_party/stb_image.h	/^   #define stbi_lrot(/;"	d
stbi_set_flip_vertically_on_load	./gfx/third_party/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_flip_vertically_on_load_thread	./gfx/third_party/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load_thread(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_unpremultiply_on_load	./gfx/third_party/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi_set_unpremultiply_on_load_thread	./gfx/third_party/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load_thread(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi_uc	./gfx/third_party/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t	typeref:typename:unsigned char
stbi_us	./gfx/third_party/stb_image.h	/^typedef unsigned short stbi_us;$/;"	t	typeref:typename:unsigned short
stbi_write_bmp	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:STBIWDEF int
stbi_write_bmp_core	./gfx/third_party/stb_image_write.h	/^static int stbi_write_bmp_core(stbi__write_context *s, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:int
stbi_write_bmp_to_func	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_force_png_filter	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_force_png_filter;$/;"	v	typeref:typename:STBIWDEF int
stbi_write_force_png_filter	./gfx/third_party/stb_image_write.h	/^int stbi_write_force_png_filter = -1;$/;"	v	typeref:typename:int
stbi_write_force_png_filter	./gfx/third_party/stb_image_write.h	/^static int stbi_write_force_png_filter = -1;$/;"	v	typeref:typename:int
stbi_write_func	./gfx/third_party/stb_image_write.h	/^typedef void stbi_write_func(void *context, void *data, int size);$/;"	t	typeref:typename:void ()(void * context,void * data,int size)
stbi_write_hdr	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f	typeref:typename:STBIWDEF int
stbi_write_hdr_core	./gfx/third_party/stb_image_write.h	/^static int stbi_write_hdr_core(stbi__write_context *s, int x, int y, int comp, float *data)$/;"	f	typeref:typename:int
stbi_write_hdr_to_func	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_jpg	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_jpg(char const *filename, int x, int y, int comp, const void *data, int /;"	f	typeref:typename:STBIWDEF int
stbi_write_jpg_core	./gfx/third_party/stb_image_write.h	/^static int stbi_write_jpg_core(stbi__write_context *s, int width, int height, int comp, const vo/;"	f	typeref:typename:int
stbi_write_jpg_to_func	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_jpg_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_png	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int /;"	f	typeref:typename:STBIWDEF int
stbi_write_png_compression_level	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_png_compression_level;$/;"	v	typeref:typename:STBIWDEF int
stbi_write_png_compression_level	./gfx/third_party/stb_image_write.h	/^int stbi_write_png_compression_level = 8;$/;"	v	typeref:typename:int
stbi_write_png_compression_level	./gfx/third_party/stb_image_write.h	/^static int stbi_write_png_compression_level = 8;$/;"	v	typeref:typename:int
stbi_write_png_to_func	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_png_to_mem	./gfx/third_party/stb_image_write.h	/^STBIWDEF unsigned char *stbi_write_png_to_mem(const unsigned char *pixels, int stride_bytes, int/;"	f	typeref:typename:STBIWDEF unsigned char *
stbi_write_tga	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:STBIWDEF int
stbi_write_tga_core	./gfx/third_party/stb_image_write.h	/^static int stbi_write_tga_core(stbi__write_context *s, int x, int y, int comp, void *data)$/;"	f	typeref:typename:int
stbi_write_tga_to_func	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_tga_with_rle	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbi_write_tga_with_rle;$/;"	v	typeref:typename:STBIWDEF int
stbi_write_tga_with_rle	./gfx/third_party/stb_image_write.h	/^int stbi_write_tga_with_rle = 1;$/;"	v	typeref:typename:int
stbi_write_tga_with_rle	./gfx/third_party/stb_image_write.h	/^static int stbi_write_tga_with_rle = 1;$/;"	v	typeref:typename:int
stbi_zlib_compress	./gfx/third_party/stb_image_write.h	/^STBIWDEF unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int/;"	f	typeref:typename:STBIWDEF unsigned char *
stbi_zlib_decode_buffer	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_malloc	./gfx/third_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize	./gfx/third_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, i/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize_headerflag	./gfx/third_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int init/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_noheader_buffer	./gfx/third_party/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int i/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_noheader_malloc	./gfx/third_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbiw__ZHASH	./gfx/third_party/stb_image_write.h	/^#define stbiw__ZHASH /;"	d
stbiw__crc32	./gfx/third_party/stb_image_write.h	/^static unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f	typeref:typename:unsigned int
stbiw__encode_png_line	./gfx/third_party/stb_image_write.h	/^static void stbiw__encode_png_line(unsigned char *pixels, int stride_bytes, int width, int heigh/;"	f	typeref:typename:void
stbiw__fopen	./gfx/third_party/stb_image_write.h	/^static FILE *stbiw__fopen(char const *filename, char const *mode)$/;"	f	typeref:typename:FILE *
stbiw__jpg_DCT	./gfx/third_party/stb_image_write.h	/^static void stbiw__jpg_DCT(float *d0p, float *d1p, float *d2p, float *d3p, float *d4p, float *d5/;"	f	typeref:typename:void
stbiw__jpg_ZigZag	./gfx/third_party/stb_image_write.h	/^static const unsigned char stbiw__jpg_ZigZag[] = { 0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,/;"	v	typeref:typename:const unsigned char[]
stbiw__jpg_calcBits	./gfx/third_party/stb_image_write.h	/^static void stbiw__jpg_calcBits(int val, unsigned short bits[2]) {$/;"	f	typeref:typename:void
stbiw__jpg_processDU	./gfx/third_party/stb_image_write.h	/^static int stbiw__jpg_processDU(stbi__write_context *s, int *bitBuf, int *bitCnt, float *CDU, in/;"	f	typeref:typename:int
stbiw__jpg_writeBits	./gfx/third_party/stb_image_write.h	/^static void stbiw__jpg_writeBits(stbi__write_context *s, int *bitBufP, int *bitCntP, const unsig/;"	f	typeref:typename:void
stbiw__linear_to_rgbe	./gfx/third_party/stb_image_write.h	/^static void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f	typeref:typename:void
stbiw__max	./gfx/third_party/stb_image_write.h	/^#define stbiw__max(/;"	d
stbiw__outfile	./gfx/third_party/stb_image_write.h	/^static int stbiw__outfile(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp,/;"	f	typeref:typename:int
stbiw__paeth	./gfx/third_party/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f	typeref:typename:unsigned char
stbiw__putc	./gfx/third_party/stb_image_write.h	/^static void stbiw__putc(stbi__write_context *s, unsigned char c)$/;"	f	typeref:typename:void
stbiw__sbcount	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbcount(/;"	d
stbiw__sbfree	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbfree(/;"	d
stbiw__sbgrow	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbgrow(a,n)  stbiw__sbgrowf/;"	d
stbiw__sbgrowf	./gfx/third_party/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f	typeref:typename:void *
stbiw__sbm	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbm(/;"	d
stbiw__sbmaybegrow	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbmaybegrow(/;"	d
stbiw__sbn	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbn(/;"	d
stbiw__sbneedgrow	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbneedgrow(/;"	d
stbiw__sbpush	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbpush(/;"	d
stbiw__sbraw	./gfx/third_party/stb_image_write.h	/^#define stbiw__sbraw(/;"	d
stbiw__wp32	./gfx/third_party/stb_image_write.h	/^#define stbiw__wp32(/;"	d
stbiw__wpcrc	./gfx/third_party/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f	typeref:typename:void
stbiw__wpng4	./gfx/third_party/stb_image_write.h	/^#define stbiw__wpng4(/;"	d
stbiw__wptag	./gfx/third_party/stb_image_write.h	/^#define stbiw__wptag(/;"	d
stbiw__write1	./gfx/third_party/stb_image_write.h	/^static void stbiw__write1(stbi__write_context *s, unsigned char a)$/;"	f	typeref:typename:void
stbiw__write3	./gfx/third_party/stb_image_write.h	/^static void stbiw__write3(stbi__write_context *s, unsigned char a, unsigned char b, unsigned cha/;"	f	typeref:typename:void
stbiw__write_dump_data	./gfx/third_party/stb_image_write.h	/^static void stbiw__write_dump_data(stbi__write_context *s, int length, unsigned char *data)$/;"	f	typeref:typename:void
stbiw__write_flush	./gfx/third_party/stb_image_write.h	/^static void stbiw__write_flush(stbi__write_context *s)$/;"	f	typeref:typename:void
stbiw__write_hdr_scanline	./gfx/third_party/stb_image_write.h	/^static void stbiw__write_hdr_scanline(stbi__write_context *s, int width, int ncomp, unsigned cha/;"	f	typeref:typename:void
stbiw__write_pixel	./gfx/third_party/stb_image_write.h	/^static void stbiw__write_pixel(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, i/;"	f	typeref:typename:void
stbiw__write_pixels	./gfx/third_party/stb_image_write.h	/^static void stbiw__write_pixels(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int/;"	f	typeref:typename:void
stbiw__write_run_data	./gfx/third_party/stb_image_write.h	/^static void stbiw__write_run_data(stbi__write_context *s, int length, unsigned char databyte)$/;"	f	typeref:typename:void
stbiw__writef	./gfx/third_party/stb_image_write.h	/^static void stbiw__writef(stbi__write_context *s, const char *fmt, ...)$/;"	f	typeref:typename:void
stbiw__writefv	./gfx/third_party/stb_image_write.h	/^static void stbiw__writefv(stbi__write_context *s, const char *fmt, va_list v)$/;"	f	typeref:typename:void
stbiw__zhash	./gfx/third_party/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f	typeref:typename:unsigned int
stbiw__zlib_add	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_add(/;"	d
stbiw__zlib_bitrev	./gfx/third_party/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f	typeref:typename:int
stbiw__zlib_countm	./gfx/third_party/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f	typeref:typename:unsigned int
stbiw__zlib_flush	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_flush() (out = stbiw__zlib_flushf/;"	d
stbiw__zlib_flushf	./gfx/third_party/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitc/;"	f	typeref:typename:unsigned char *
stbiw__zlib_huff	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_huff(n)  ((n) <= 143 ? stbiw__zlib_huff1(n) : (n) <= 255 ? stbiw__zlib_huff2/;"	d
stbiw__zlib_huff1	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_huff1(/;"	d
stbiw__zlib_huff2	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_huff2(/;"	d
stbiw__zlib_huff3	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_huff3(/;"	d
stbiw__zlib_huff4	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_huff4(/;"	d
stbiw__zlib_huffa	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_huffa(/;"	d
stbiw__zlib_huffb	./gfx/third_party/stb_image_write.h	/^#define stbiw__zlib_huffb(/;"	d
stbiw_convert_wchar_to_utf8	./gfx/third_party/stb_image_write.h	/^STBIWDEF int stbiw_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	typeref:typename:STBIWDEF int
stbiw_uint32	./gfx/third_party/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t	typeref:typename:unsigned int
step	./gfx/third_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
string	./cli/commandline.h	/^		} string;$/;"	m	union:cli::Option::__anona3abd846010a	typeref:struct:cli::Option::__anona3abd846010a::__anona3abd8460408
string_to_integer	./cli/commandline.h	/^		} string_to_integer;$/;"	m	union:cli::Option::__anona3abd846010a	typeref:struct:cli::Option::__anona3abd846010a::__anona3abd8460508
succ_high	./gfx/third_party/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
succ_low	./gfx/third_party/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
suffix	./gfx/third_party/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anonbc04e6d01208	typeref:typename:stbi_uc
supports_tile_flips	./gfx/export/capabilities.h	/^		bool supports_tile_flips;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70308	typeref:typename:bool
supports_tile_flips	./gfx/export/capabilities.h	/^		bool supports_tile_flips;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70408	typeref:typename:bool
supports_tile_removal	./gfx/export/capabilities.h	/^		bool supports_tile_removal;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70208	typeref:typename:bool
third_party.h	./gfx/third_party/third_party.h	1;"	F	epoch:1758245999
tile_group_size	./gfx/export/capabilities.h	/^		uint32_t tile_group_size;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70208	typeref:typename:uint32_t
tile_index	./gfx/data/tilemap.h	/^	uint8_t tile_index;$/;"	m	struct:gfx::TilemapEntry	typeref:typename:uint8_t
tile_index_format	./gfx/export/capabilities.h	/^		Format tile_index_format;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70308	typeref:typename:Format
tile_index_offset	./options.h	/^		int32_t tile_index_offset = 0;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:int32_t
tile_max_count	./gfx/export/capabilities.h	/^		uint32_t tile_max_count;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70208	typeref:typename:uint32_t
tile_parameter_format	./gfx/export/capabilities.h	/^		Format tile_parameter_format;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70308	typeref:typename:Format
tile_removal	./options.h	/^		gfx::TileRemoval tile_removal = gfx::kTileRemovalNone;$/;"	m	struct:Options::__anon5d2d33240108	typeref:typename:gfx::TileRemoval
tilemap	./gfx/export/capabilities.h	/^	} tilemap;$/;"	m	struct:gfx::Capabilities	typeref:struct:gfx::Capabilities::__anondbbac8a70308
tilemap	./options.h	/^	tilemap;$/;"	m	struct:Options	typeref:struct:Options::__anon5d2d33240208
tilemap.cpp	./gfx/data/tilemap.cpp	1;"	F	epoch:1758245999
tilemap.cpp	./gfx/export/tilemap.cpp	1;"	F	epoch:1758245999
tilemap.h	./gfx/data/tilemap.h	1;"	F	epoch:1758245999
tilemap.h	./gfx/export/tilemap.h	1;"	F	epoch:1758245999
tiles_per_bank	./gfx/export/capabilities.h	/^		uint32_t tiles_per_bank;$/;"	m	struct:gfx::Capabilities::__anondbbac8a70208	typeref:typename:uint32_t
tileset	./gfx/export/capabilities.h	/^	} tileset;$/;"	m	struct:gfx::Capabilities	typeref:struct:gfx::Capabilities::__anondbbac8a70208
tileset	./options.h	/^	tileset;$/;"	m	struct:Options	typeref:struct:Options::__anon5d2d33240108
tileset.cpp	./gfx/data/tileset.cpp	1;"	F	epoch:1758638151
tileset.cpp	./gfx/export/tileset.cpp	1;"	F	epoch:1758245999
tileset.h	./gfx/data/tileset.h	1;"	F	epoch:1758245999
tileset.h	./gfx/export/tileset.h	1;"	F	epoch:1758245999
todo	./gfx/third_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anonbc04e6d00808	typeref:typename:int
tq	./gfx/third_party/stb_image.h	/^      int tq;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
transparent	./gfx/third_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
type	./gfx/third_party/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anonbc04e6d00d08	typeref:typename:stbi__uint32
type	./gfx/third_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonbc04e6d01108	typeref:typename:stbi_uc
unload	./gfx/import/image.cpp	/^void Image::unload()$/;"	f	class:gfx::Image	typeref:typename:void
use_8800_addressing_mode	./options.h	/^		bool use_8800_addressing_mode = false;$/;"	m	struct:Options::__anon5d2d33240308	typeref:typename:bool
utils.h	./gfx/utils/utils.h	1;"	F	epoch:1758245999
v	./gfx/third_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
validateDivisionInfo	./gfx/import/image.cpp	/^static bool validateDivisionInfo($/;"	f	namespace:gfx	typeref:typename:bool	file:
validateDivisions	./gfx/import/image.cpp	/^static bool validateDivisions($/;"	f	namespace:gfx	typeref:typename:bool	file:
validate_uint32	./gfx/third_party/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (stbi__uint32)==4?1:-1]
value	./cli/commandline.h	/^	int32_t value;$/;"	m	struct:cli::Mapping	typeref:typename:int32_t
value	./gfx/third_party/stb_image.h	/^   stbi__uint16 value[STBI__ZNSYMS];$/;"	m	struct:__anonbc04e6d00b08	typeref:typename:stbi__uint16[]
values	./gfx/third_party/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anonbc04e6d00708	typeref:typename:stbi_uc[256]
verbose	./options.h	/^	bool verbose = false;$/;"	m	struct:Options	typeref:typename:bool
vs	./gfx/third_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anonbc04e6d00a08	typeref:typename:int
w	./gfx/import/image.h	/^	uint32_t w;$/;"	m	struct:gfx::Rectangle	typeref:typename:uint32_t
w	./gfx/third_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anonbc04e6d01308	typeref:typename:int
w2	./gfx/third_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
w_lores	./gfx/third_party/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anonbc04e6d00a08	typeref:typename:int
width	./gfx/data/tileset.h	/^	uint32_t width;$/;"	m	struct:gfx::TileFlip	typeref:typename:uint32_t
width	./gfx/import/division.h	/^	uint32_t width;$/;"	m	struct:gfx::Division	typeref:typename:uint32_t
writeDivisionInfo	./gfx/gfx.cpp	/^bool writeDivisionInfo(const DivisionInfo& division_info, const char* output_filename)$/;"	f	namespace:gfx	typeref:typename:bool
writePaletteSetToPNG	./gfx/gfx.cpp	/^bool writePaletteSetToPNG(const PaletteSet& palette_set, const char* filename)$/;"	f	namespace:gfx	typeref:typename:bool
writeTilesetToPNG	./gfx/gfx.cpp	/^bool writeTilesetToPNG($/;"	f	namespace:gfx	typeref:typename:bool
writeToFile	./gfx/gfx.cpp	/^static bool writeToFile($/;"	f	namespace:gfx	typeref:typename:bool	file:
write_back_address	./cli/commandline.h	/^			bool* write_back_address;$/;"	m	struct:cli::Option::__anona3abd846010a::__anona3abd8460208	typeref:typename:bool *
write_back_address	./cli/commandline.h	/^			const char** write_back_address;$/;"	m	struct:cli::Option::__anona3abd846010a::__anona3abd8460408	typeref:typename:const char **
write_back_address	./cli/commandline.h	/^			int32_t* write_back_address;$/;"	m	struct:cli::Option::__anona3abd846010a::__anona3abd8460308	typeref:typename:int32_t *
write_back_address	./cli/commandline.h	/^			int32_t* write_back_address;$/;"	m	struct:cli::Option::__anona3abd846010a::__anona3abd8460508	typeref:typename:int32_t *
x	./gfx/import/image.h	/^	uint32_t x;$/;"	m	struct:gfx::Rectangle	typeref:typename:uint32_t
x	./gfx/third_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
y	./gfx/import/image.h	/^	uint32_t y;$/;"	m	struct:gfx::Rectangle	typeref:typename:uint32_t
y	./gfx/third_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonbc04e6d00808::__anonbc04e6d00908	typeref:typename:int
ypos	./gfx/third_party/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anonbc04e6d00a08	typeref:typename:int
ystep	./gfx/third_party/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anonbc04e6d00a08	typeref:typename:int
z_distance	./gfx/third_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:stbi__zhuffman
z_expandable	./gfx/third_party/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:int
z_length	./gfx/third_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:stbi__zhuffman
zbuffer	./gfx/third_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:stbi_uc *
zbuffer_end	./gfx/third_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:stbi_uc *
zout	./gfx/third_party/stb_image.h	/^   char *zout;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:char *
zout_end	./gfx/third_party/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:char *
zout_start	./gfx/third_party/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anonbc04e6d00c08	typeref:typename:char *
~Image	./gfx/import/image.cpp	/^Image::~Image()$/;"	f	class:gfx::Image
~ImageArea	./gfx/import/image.cpp	/^ImageArea::~ImageArea()$/;"	f	class:gfx::ImageArea
~ImageTile	./gfx/import/image.cpp	/^ImageTile::~ImageTile()$/;"	f	class:gfx::ImageTile
~Palette	./gfx/data/palette.cpp	/^Palette::~Palette()$/;"	f	class:gfx::Palette
~PaletteSet	./gfx/data/palette.cpp	/^PaletteSet::~PaletteSet()$/;"	f	class:gfx::PaletteSet
~PaletteSetData	./gfx/export/palette.cpp	/^PaletteSetData::~PaletteSetData()$/;"	f	class:gfx::PaletteSetData
~Parser	./cli/commandline.cpp	/^Parser::~Parser()$/;"	f	class:cli::Parser
~Tile	./gfx/data/tileset.cpp	/^Tile::~Tile()$/;"	f	class:gfx::Tile
~Tilemap	./gfx/data/tilemap.cpp	/^Tilemap::~Tilemap()$/;"	f	class:gfx::Tilemap
~TilemapData	./gfx/export/tilemap.cpp	/^TilemapData::~TilemapData()$/;"	f	class:gfx::TilemapData
~Tileset	./gfx/data/tileset.cpp	/^Tileset::~Tileset()$/;"	f	class:gfx::Tileset
~TilesetData	./gfx/export/tileset.cpp	/^TilesetData::~TilesetData()$/;"	f	class:gfx::TilesetData
